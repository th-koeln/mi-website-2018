[
    {
        "uri": "/content/_index",
        "title": "Wie funktioniert Kommunikation in der Medieninformatik?",
        "content": "\nAuf dieser kleinen Website werden einige Grundsätze und Ausprägungen bezogen auf die Kommunikation des Lehr- und Forschungsgebiets Medieninformatik am Campus Gummersbach dargelegt. Dies ist eine offener, iterativer Prozess, an dem sich Studierende, Mitarbeiter und Ehemalige gerne beteiligen können. Für Ideen und Fragen bitte die des zugehörigen GitHub Repos benutzen. \n\nBasics\nHier werden Themen besprochen, die für viele oder alle Kanäle relevant und sinnvoll sind. Dazu gehören die Beschreibung der Zielgruppen sowie die Erläuterung der einzelnen Kanäle und Formate. \n\n Website\nIn dieser Sektion werden die verschiedenen Aspekte der Medieninformatik Website erklärt. Dazu gehören die Gestaltungsziele, Struktur, Inhaltstypen, usw.\n\n",
        "tags": []
    },
    {
        "uri": "/content/papers/_index",
        "title": "Arbeiten",
        "content": "\nAlle möglichen Arbeiten.\n\n",
        "tags": []
    },
    {
        "uri": "/content/papers/2015/_index",
        "title": "2015",
        "content": "\n\n",
        "tags": []
    },
    {
        "uri": "/content/papers/2015/internationalisierung-und-lokalisierung-von-webanwendungen-unter-zuhilfenahme-von-angularjs/index",
        "title": "Internationalisierung und Lokalisierung von Webanwendungen unter Zuhilfenahme von AngularJS",
        "content": "\nDas folgende Dokument beschreibt die Internationalisierung und Lokalisierung von\nWebanwendungen. Anhand der bereits aufgezeigten Aspekte im Praxisprojekt,\nwerden diese in der praktischen Umsetzung erfolgen.\nDabei wird auf das AngularJS Framework zurückgegriffen, welches einige Möglichkeiten\nzur Implementierung von mehrsprachigen Webanwendungen bietet. Leider sind die\nvordefinierten Möglichkeiten limitiert, deshalb werden zusätzliche Module von Drittanbietern\nin Betracht gezogen. Dabei werden die dortigen Lösungen und Ergänzungen\nbeschrieben und gegeneinander abgewogen. Anschließend werden die einzelnen Funktionen\nder Module für eine Bewertung ermittelt, die daraus resultierenden Ergebnisse\nin Abwägung gegenüber gestellt und zu einem Vergleich zusammengefasst.\nDas Ziel des Projektes ist es, eine Beispiel-Anwendung zu erstellen, welche unter Zuhilfenahme\nvon AngularJS entwickelt wird. Diese Anwendung soll Entwicklern als Beispiel\nund Gedankenstütze dienen, die wichtigen Aspekte der Internationalisierung sowie Lokalisierung\nzu berücksichtigen.",
        "tags": []
    },
    {
        "uri": "/content/papers/2015/menschzentrierte-entwicklung-einer-benutzungsschnittstelle-am-beispiel-einer-android-basierten-smartwatch/index",
        "title": "Menschzentrierte Entwicklung einer Benutzungsschnittstelle am Beispiel einer android-basierten Smartwatch",
        "content": "\nDiese Arbeit befasst sich mit der Analyse und Evaluation einer androidbasierten Smartwatch\nzum Zwecke der Untersuchung der Auswirkungen des User Interface Designs\nauf die Nutzung von Smartwatches. Hierzu soll die Domäne und all ihre Kontexte\ndetailliert untersucht und beschrieben werden. Daher werden menschzentrierte Gestaltungsaktivitäten\nauszuführen. Aufbauend darauf soll das User Interface Design der\nSmartwatch evaluiert werden. In diesem Zusammenhang sollen mögliche Evaluationsmethoden\nbetrachtet und für den möglichen Einsatz abgewägt werden. Anschließend\ngilt es, entsprechende Evaluationserergebnisse auszuwerten und Thesen bezüglich der\nAuswirkung des User Interface Designs der vorliegenden Smartwatch auf die Benutzung\nder gleichen aufzustellen. Weiterhin sollen aufbauend darauf, Gestaltlösungen zur\nKorrektur der erzielten Ergebnisse der Evaluation erstellt werden.",
        "tags": []
    },
    {
        "uri": "/content/papers/2015/moeglichkeiten-und-grenzen-von-google-cast/index",
        "title": "Möglichkeiten und Grenzen von Google Cast",
        "content": "\nDiese Arbeit beschäftigt sich mit den Möglichkeiten und Grenzen der Plattform Google\nCast. Der Nutzungskontext der Plattform beschränkt sich weitestgehend auf kleine\nBenutzergruppen. Dabei wird der Anwendungsfall der Medienwiedergabe fokussiert. Da\ndie Plattform es ermöglicht HTML5-Anwendungen zu entwickeln, eröffnen sich weitere\nAnwendungsbereiche. Eine tiefergehende Auseinandersetzung mit der Architektur von\nGoogle Cast, sowie das Anfertigen einer Beispielimplementierung bestätigt, dass der Nutzungkontext\nvon Google Cast weitreichender gefasst werden kann. Die Medienwiedergabe\nwird stark von der Plattform fokussiert, jedoch sind diverse weitere Anwendungsfälle denkbar.\nDer Einsatz von Google Cast sollte dennoch für einzelne Anwendungsfälle abgewägt\nwerden, da beispielsweise eine laufende Anwendung jederzeit durch andere Netzwerkteilnehmer\nunbeabsichtigt oder mutwillig unterbrochen werden kann.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/_index",
        "title": "2016",
        "content": "\nBlogg\n\n",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/25knots-ein-tool-zur-verbesserung-der-gestalterischen-qualitaet-von-artefakten-im-hochschulkontext/index",
        "title": "25knots – Ein Tool zur Verbesserung der gestalterischen Qualität von Artefakten im Hochschulkontext",
        "content": "\nDie nachfolgende Arbeit beschäftigt sich mit der Entwicklung der Webanwendung 25Knots\nzu einem marktfähigen Produkt, basierend auf bereits im Praxisprojekt erarbeiteten Konzepten\nund einem Proof of Concept.\nZiel ist dabei nicht nur, die Verwendung durch die Community nach Abschluss dieser\nArbeit möglich zu machen, sondern diese auch aktiv an der Weiterentwicklung der Anwendung\nteilhaben zu lassen.\nDie Anwendung 25Knots zielt darauf ab, die gestalterische Qualität von Artefakten im\nHochschulkontext zu verbessern. Dieses Ziel soll durch die Unterstützung von Studierenden\nwährend des Entwicklungsprozesses von Artefakten erreicht werden. Die Anwendung\nsoll den Studierenden dabei eine Möglichkeit bieten, interaktiv Ergebnisse zu produzieren,\ndie für ihren aktuellen Entwicklungsprozess hilfreich sind. Wissen soll dabei eher implizit,\ndurch ein Learning by Doing Konzept, vermittelt werden.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/ableitung-von-beruehrungslosen-gesten-aus-multi-touch-gesten-fuer-die-steuerung-von-multimedia-im-automobil/index",
        "title": "Ableitung von berührungslosen Gesten aus Multi-Touch Gesten für die Steuerung von Multimedia im Automobil",
        "content": "\nDie Multimedia in einem Auto wird durch die steigende Entwicklungen der Technologie\nimmer beliebter. Von einfachen CD-Player und Radioempfänger sind mittlerweile\nNavigationssysteme, Telefonieren oder auch das Internet in einem Auto zu finden. Um\ndie Interaktion mit diesen Entertainmentsystemen zu vereinfachen wurde aus einem\neinfachen LCD-Bildschirm, Touch-Oberflächen integriert. Die \"Intuitivität\" der Interaktionsmöglichkeiten\nsoll durch die Einführung von berührungslosen Gesten erreicht\nwerden. Der Nutzer soll schnell und intuitiv mit dem System interagieren können, doch\nwas bedeutet dies für den Nutzer? Eine Methode, um ein System nach den Bedürfnissen\nund Wünschen des Nutzers zu entwickeln ist das user-centered-design. Anhand dieser\nempirischen Studie soll ermittelt werden, ob Nutzer mit ihren Erfahrungen aus dem\nBereich der Multi-Touch Gesten ausgewählte Funktionen für die Steuerung von Multimedia,\nohne zusätzliche Hilfe mit berührungslosen Gesten ausführen können. Daraus\nsoll am Ende dieser Arbeit ein Gestenset zu den jeweiligen Funktionen erstellt werden.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/atomic-responsive-design-workflow-kombination-des-responsive-design-workflows-mit-dem-atomic-design-zu-einem-neuen-vorgehensmodell/index",
        "title": "Atomic Responsive Design Workflow Kombination des Responsive Design Workflows mit dem Atomic Design zu einem neuen Vorgehensmodell",
        "content": "\nDie Gestaltung und Optimierung von Webseiten auf die unterschiedlichsten Geräte,\nBildschirmgrößen und -Auflösungen rückt durch das ständige Wachstum der Anzahl\nmobiler Internetnutzer immer mehr in den Fokus der Webdesigner und -entwickler und\nsollte daher bei der Entwicklung von Webseiten berücksichtigt werden.\nDie vorliegende Arbeit befasst sich damit den Entwurf eines Vorgehensmodells zu vermitteln,\nwelcher in seinen Grundzügen die Aspekte der reaktionsfähigen Webentwicklung\nsowie der atomaren Gestaltung kombiniert. Basis für das Vorgehensmodell ist der\nvon Stephen Hay und Brad Frost erarbeitete Responsive Design Workflow (kurz\nRDW) sowie der Atomic Design (kurz AD) Ansatz, da diese bereits die wesentlichen\nAspekte, sowie die Grundlagen zur gestalterischen und technischen Umsetzung\nvon Webseiten und die wichtigen Prinzipien der Inhaltsgestaltung beinhalten.\nDas Ziel dieser Arbeit ist es, die implizierten Herangehensweisen dieser Ansätze aufzuzeigen\nund diese zu einem neuen Vorgehensmodell zu kombinieren. Deshalb werden\nzunächst die Grundlagen dieser Ansätze kurz thematisiert und im Zuge dieser Arbeit\nmiteinander kombiniert, sodass die Aspekte beider Verfahren in ein neues Entwicklungsmodell\nüberführt werden.\nNach den theoretischen Grundlagen wird die erarbeitete Vorgehensweise mit praktischen\nEinsatzbeispielen verdeutlicht. Im fortlaufenden Prozess wird so eine Webseite\nmit realen Anforderungen erstellt, sodass der Leser anhand zahlreicher Beispiele eine\nkonkrete Hilfestellung an die Hand gegeben bekommt, um neue Gestaltungslösungen\nzu entwerfen und diese bewerten zu können. Dabei werden verwendete Begrifflichkeiten\nbeleuchtet und auf die gestalterische und technische sowie organisatorische Umsetzung\neingegangen. So entsteht ein neuartiges Vorgehensmodell, das durch die Berücksichtigung\nverschiedener Aspekte der Webentwicklung die Entwicklung von Webseiten ermöglichen soll.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/die-ermittlung-von-sehenswuerdigkeiten-mittels-linked-open-data-am-beispiel-der-stadt-koeln/index",
        "title": "Die Ermittlung von Sehenswürdigkeiten mittels Linked Open Data am Beispiel der Stadt Köln",
        "content": "\nDas Suchen ist eine der, wenn nicht die am häufigsten durchgeführte Tätigkeit im Internet.\nTäglich werden Suchmaschinen mit Problemen aus aller Welt und aller Domänen\nbefragt, in der Hoffnung, dass das Internet eine Lösung bereitstellt. Neben dem Web\nder Dokumente, welches überwiegend die großen Suchmaschinenhersteller wie Google\nund Microsoft durchsuchen, existiert auch das weniger bekannte Web der Daten. In\ndiesem Teil des Internets werden Daten, keine Dokumente, in einem festen Format kodiert.\nDadurch soll die Möglichkeit geschaffen werden, dass nicht nur Menschen, sondern\nauch Maschinen, diese Daten verarbeiten können. Die Daten enthalten untereinander\nVerlinkungen, weswegen man auch von Linked Data spricht. Mit der vom W3C standardisierten\nAbfragesprache SPARQL ist es möglich, diese Daten nach selbst definierten\nKriterien abzufragen.\n\nDiese Arbeit befasst sich mit der Entwicklung einer SPARQL Abfrage zur Ermittlung\nvon Sehenswürdigkeiten in Köln. Anhand dieses Anwendungsbeispiels soll beschrieben\nwerden, inwieweit Linked Data in der Lage ist, mit Problemen und Fragestellungen des\nAlltags umzugehen. Es wird sich zeigen, dass es grundsätzlich möglich ist, derartige\nAnwendungsszenarien mit Linked Data zu lösen. Ein umfassendes Suchergebnis, welches\nbeispielsweise Reiseführer geben, konnte jedoch nicht erzielt werden. Grund dafür\nsind hauptsächlich, wie in dieser Arbeit dargelegt wird, inkonsistente Daten.\nUm diese Beobachtung aufstellen zu können, wurden präzisere Suchkriterien für Sehenswürdigkeiten \nspezifiziert. Weitere Auffälligkeiten, die während der Entwicklung\nbemerkt wurden, wurden entsprechend dokumentiert.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/entwicklung-einer-webbasierten-auftragsbearbeitung-fuer-ein-kleinunternehmen-in-der-lohnfertigung/index",
        "title": "Entwicklung einer webbasierten Auftragsbearbeitung für ein Kleinunternehmen in der Lohnfertigung",
        "content": "\nIn dieser Bachelorarbeit wird die Auftragsbearbeitung eines kleinen Unternehmens analysiert\nund auf Grundlage dessen eine Webanwendung entwickelt, welche diese digitalisieren\nund optimieren soll. Dabei wird eine genaue Betrachtung der Ausgangssituation\nvorgenommen und eine Stakeholderbetrachtung durchgeführt. Aus den daraus resultierenden\nAnforderungen an die Webanwendung wird in der Konzeption ein Lösungsansatz\nentwickelt, welcher die Anforderungen an diese erfüllt. Anschließend wird eine\nTechnologieunabhängige Systemarchitektur entwickelt. Anhand der in der Konzeption\nerarbeiteten Ergebnisse werden Anforderungen an das System ermittelt. Basierend\nauf den Anforderungen an die Webanwendung sowie den Anforderungen an das System\nwird eine Gliederung der Technologieabwägung vorgenommen und abschließend\ngeeignete Technologie abgewägt. Die Bachelorarbeit endet mit der Dokumentation der\nImplementierung und diskutiert abschließend den Zielerreichungsgrad.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/ermittlung-relevanter-themengebiete-fuer-die-entwicklung-eines-tools-zur-unterstuetzung-beim-erstellen-von-gestaltungsloesungen-im-hochschulkontext/index",
        "title": "Ermittlung relevanter Themengebiete für die Entwicklung eines Tools zur Unterstützung beim Erstellen von Gestaltungslösungen im Hochschulkontext",
        "content": "\nZiel des vorliegenden Praxisprojektes war es, relevante Themengebiete für die Konzeption eines\nTools zu definieren, das Nutzern dabei hilft, Gestaltungslösungen im Hochschulkontext zu\nerstellen.\nZu diesem Zweck wurden zunächst relevante Themengebiete auf Basis einer Fehleranalyse\nermittelt. Anschließend wurde der Versuch unternommen, in den jeweiligen Themengebieten\nRegeln zu definieren, die bei einer späteren Umsetzung des Tool berücksichtigt werden können.\nDie Arbeit hält die theoretischen Ergebnisse fest und verweist auf einige praktische Ergebnisse\nwie etwa einen Proof of Concept oder Wireframes, die erstellt wurden.",
        "tags": []
    },
    {
        "uri": "/content/papers/2016/implementierung-und-optimierung-des-atomic-design-ansatzes-in-den-workflow-der-jar-media-gmbh/index",
        "title": "Implementierung und Optimierung des Atomic Design-Ansatzes in den Workflow der JAR Media GmbH",
        "content": "\nDie vorliegende Bachelor-Thesis beschaftigt sich mit der Optimierung der zur Zeit\nder Ausarbeitung aktuellen Arbeitsweisen und eingesetzten Technologien bei der Firma\nJAR Media GmbH im Frontend-Editor. Diese werden von dem Autor kritisch\nuberpruft und auf Grundlage des Atomic Design-Ansatzes optimiert. Dabei werden\ndie angesagten und ausgereiften Werkzeuge auf dem Markt auf eine mogliche Verwendung\nim besagten Unternehmen evaluiert. Anschlie\u0019end \fndet die Entwicklung eines\neigenen speziell auf die Firma JAR Media GmbH zugeschnittenen Work\nows, unter\nBerucksichtigung vieler fur die Firma wichtigen Faktoren statt, welches kritisch auf die\nOptimierungsfaktoren E\u000ezienz, Qualitat und Zuganglichkeit uberpruft wird.\nDas Fazit inklusive einem Ausblick schlie\u0019t die Bachelor-Thesis ab.",
        "tags": []
    },
    {
        "uri": "/content/papers/2017/_index",
        "title": "2015",
        "content": "\n\n",
        "tags": []
    },
    {
        "uri": "/content/papers/2017/ermittlung-und-prototypische-integration-einer-visuellen-programmierumgebung-zur-programmierung-von-arduino-uno-mikrocontrollern-im-projekt-jugend-hackt-hello-world/index",
        "title": "Ermittlung und prototypische Integration einer visuellen Programmierumgebung zur Programmierung von Arduino-Uno-Mikrocontrollern im Projekt Jugend hackt - Hello World",
        "content": "\nDiese Arbeit baut auf dem Praxisprojekt SS17 mit dem Titel Konzeption eines Tages” workshops zur Vermittlung kreativer Probleml¨osekompetenzen anhand von Technik mit Fokus auf Programmierung - an Jugendliche zwischen 10 und 16 Jahren“ auf. Die Arbeit dient der Erlangung des akademischen Grades Bachelor of Science.\n\nZiel der Arbeit ist eine Auswahl einer visuellen Programmierumgebung f¨ur ArduinoUno-Mikrocontroller f¨ur das Projekt Jugend hackt - Hello World“. Die Program” mierumgebung soll dazu dienen, Kindern und Jugendlichen, die Programmieren lernen m¨ochten, die Programmierung der Arduino-Uno-Mikrocontroller zu erleichtern. Die Arbeit wird auf Basis von Fachliteratur zur Auswahl von Software in Unternehmen in Kombination mit Methoden der menschzentrierten Entwicklung durchgef¨uhrt. Sie beginnt mit der Beschreibung des aktuellen Zustands und der Problemstellung. Darauf folgt eine Durchleuchtung der Dom¨ane und des ben¨otigten fachlichen Grundwissens durch die Analyse des Nutzungskontextes und des technischen Kontextes des ArduinoUnos. Bei der Auswahl von Software wird zun¨achst empfohlen, Anforderungen zu ermitteln und anhand dieser bestehende Software abzugleichen und auszuw¨ahlen. Dazu wird die Methodik zur Anforderungsanalyse des Usability engineering lifecycles“ ange” wandt. Diese gibt vor, zun¨achst Benutzermodelle zu erstellen, um die Charakteristiken verschiedener Benutzer festzuhalten und einbeziehen zu k¨onnen. Dazu werden User Proﬁles erstellt.\n\nIm n¨achsten Schritt werden die Aufgaben der Benutzer erarbeitet, wozu Use Cases verwendet werden. Die Use Cases werden anschließend in einer Claim Analyse ausgewertet, woraus sich funktionale Anforderungen ableiten lassen. Neben den funktionalen Anforderungen lassen sich anhand der Informationen aus der Kontextanalyse qualitative Anforderungen aufstellen. Diese ergeben sich aus den Grunds¨atzen der Dialoggestaltung der DIN EN ISO Norm 9241, Teil 110 im Kontext zur Zielgruppe. Zudem k¨onnen technische und organisationale Anforderungen aus der Kontextanalyse abgeleitet werden. Sind alle Anforderungen an die Software aufgestellt, werden diese priorisiert und gewichtet. Anschließend wird eine Marktanalyse durchgef¨uhrt. Die dort ermittelte Software wird ohne praktische Tests mit den Anforderungen abgeglichen. Die Softwarel¨osungen, die am ehesten den Anforderungen entsprechen, werden in einer Testimplementierung in Form von Proof of Concepts genauer untersucht und anschließend anhand einer Nutzwertanalyse unter Ber¨ucksichtigung aller Anforderungen bewertet. Daraus erfolgt eine ﬁnale Softwareauswahl, ein Fazit und ein Ausblick.\n",
        "tags": []
    },
    {
        "uri": "/content/papers/2017/spielerische-verwendung-des-semantischen-differentials-als-werkzeug-zur-schaffung-eines-einheitlichen-zielbildes-fuer-eine-produktentwicklung/index",
        "title": "Spielerische Verwendung des semantischen Differentials als Werkzeug zur Schaffung eines einheitlichen Zielbildes für eine Produktentwicklung",
        "content": "\nDer Titel diese Bachelorarbeitet lautet: \"Spielerische Verwendung des semantischen Differentials\nals Werkzeug zur Schaffung eines einheitlichen Zielbildes in der Produktentwicklung\". Zunächst\nwurde in dieser Arbeit die Motivation erklärt und die Zielsetzung aufgestellt. Anschließend wurden\ndie Grundlagen untersucht, die in dem Titel schon angedeutet wurden. Dazu zählt, dass die\nMethode des semantischen Differentials mit anderen Methoden verglichen wurde, der Arbeitsablauf\nin der Produktentwicklung betrachtet, das semantische Differential und dessen Vorgehensweise\nerklärt und die Gamification kurz betrachtet wurden. Nachdem dieser Grundlagenteil\nabgeschlossen war, wurde mit den gesammelten Informationen ein Konzept erstellt. Anhand des\nKonzeptes wurde dann ein Rapid Prototype erstellt, welcher in einem nächsten Schritt für eine\nEvaluation verwendet wurde. Nachdem die Evaluation abgeschlossen war, wurden die dort herausgefundenen\nInformationen mit in die Ausarbeitung des Entwurfes übernommen. Nachdem\nAbwägungen durchgeführt und Entscheidungen getroffen wurden, entstand schlussendlich ein\nSpiel, welches den folgenden Namen trägt: \"Design Vision - Zur Herstellung von gemeinsamen\nZielbildern in der Produktentwicklung unter Verwendung des semantischen Differentials\".",
        "tags": []
    },
    {
        "uri": "/content/papers/2017/user-tracking-via-browser-fingerprinting/index",
        "title": "User Tracking via Browser Fingerprinting",
        "content": "\nIn days that we can do almost anything online, it is crucial for web developers to\nreceive information about the users' behavior and devices in order to improve the web\nservice. We make use of cookies to identify / recognize a user and store the required\ninformation about them. In this thesis, however, I present a modern, sophisticated\nway to track users without using cookies as it has become very easy to block them.\nThis technique is called browser Fingerprinting. It works by combining many different\ncharacteristics that are available to a website into one unique identifier. I describe\nthe state-of-the-art of this technique and show how it works in a comprehensible way.\nI characterize use case scenarios, give examples and highlight benefits towards other\ntracking techniques as well as problems that come along when using Fingerprinting. I\nspotlight that browser Fingerprinting is already used in many websites by conducting\na crawl of the top 5 000 international domains and top 5 000 *.de domains. Lastly, I\nconclude and give assumptions about the future development and privacy considerations.",
        "tags": []
    },
    {
        "uri": "/content/papers/2018/_index",
        "title": "2015",
        "content": "\n\n",
        "tags": []
    },
    {
        "uri": "/content/papers/2018/generierung-von-wortwolken-im-svg-format-mittels-webstandards/index",
        "title": "Generierung Von Wortwolken Im Svg Format Mittels Webstandards",
        "content": "\nBei der Visualisierung von Informationen geht es vor allem darum Daten oder Zusammenhänge graphisch darzustellen. Für die graphische Darstellung können verschiedene Mittel verwendet werden, wie z.B. Tabellen, Diagramme oder Bilder. Das Kriterium zur Auswahl der Mittel hängt mit dem Kontext der Information und einer oder mehreren Fragen, die es mit der Visualisierung zu beantworten gilt, zusammen [1, p. 18f]. Wenn die Information z.B. unmittelbar mit Zahlen zusammenhängt, eignet sich für die Visualisierung oft ein Diagramm, da hier geometrische Formen verwendet werden können und die Größe der Formen im Bezug zur zählbaren Information steht. Solche Visualisierungen können sogar ganz automatisch durch Verwendung von Computern und Algorithmen realisiert werden. Allerdings können nicht alle Informationen mit Hilfe von Diagrammen visualisiert werden. Ein Beispiel hierfür wäre eine visuelle Darstellung des Inhalts eines Buchs oder eines Texts. In diesem Fall können sogenannte Wortwolken verwendet werden, um Texte oder Wortmengen zu visualisieren. Bei einer Wortwolke werden Wörter nah aneinander positioniert, sodass sich ein Bild ergibt (siehe ). Dabei steht die Schriftgröße eines Wortes in Relation dazu, wie oft das Wort im Text vorkommt. Wortwolken sind vielfältig einsetzbar und sind in verschiedenen Bereichen zu finden, wie z.B. in der Mode als Aufdruck.\n\nBei der Erstellung von Wortwolken kann auf Bildbearbeitungsprogramme zurückgegriffen werden. Durch manuelles Einfügen und Positionieren von Worten können hierdurch Wortwolken erstellt werden. Da dieser Vorgang allerdings sehr aufwendig sein kann, werden für die Erstellung von Wortwolken auch Anwendungen verwendet, die den Vorgang der Positionierung der Wörter automatisieren und Wortwolken in Form von Bilder generieren können.\n\nDiese Arbeit dokumentiert die Entwicklung eines Frameworks zur Generierung von Wortwolken im SVG-Format auf Grundlage des Praxisprojekts „Wortwolken, eine Methode zur textuellen Visualisierung, prototypisch realisiert mittels Webstandards“ von Pascal Schorde. Es gilt zu klären was nötig ist, um den Vorgang zur Erstellung von Wortwolken mittels Algorithmen zu automatisieren.",
        "tags": []
    },
    {
        "uri": "/content/papers/2018/metriken-und-visualisierungen-zur-verbesserung-der-navigation-in-der-kommunalen-open-data-landschaft-deutschlands/index",
        "title": "Metriken und Visualisierungen zur Verbesserung der Navigation in der kommunalen Open Data Landschaft Deutschlands",
        "content": "\nDiese Arbeit befasst sich mit der Frage, durch welche Metriken und Visualisierungen die Navigation in der kommunalen Open Data Landschaft Deutschlands verbessert werden kann.Ziel der Arbeit ist es, benutzerorientierte Metriken und Visualisierungen zu ermitteln, um anschließend einen Prototypen zu erschaffen, der als Werkzeug für die Navigation in der kommunalen Open Data Landschaft dient.\n\nDie Arbeit untersucht im ersten Teil die Domäne und analysiert Konkurrenzprodukte. Ebenso werden die Stakeholder ermittelt und die Erfordernisse der Benutzer festgehalten. Als besonders bedeutend stellen sich dabei die normalen Bürger als Benutzer des Systems heraus, da sie am meisten Hilfestellung bei der Navigation durch die Open Data Landschaft benötigen. Die Konzeption der Metriken basiert auf den Benutzererfordernissen und Richtlinien die von Hauser und Katz (1998) festgelegt wurden. Es werden ebenfalls die Metriken des Open Data Monitors betrachtet und teilweise in das neue Metriksystem übernommen.\n\nDer Design-Prozess der Visualisierung basiert auf einem Ansatz von Kirk (2012), der sich auch auf die Hintergründe der Daten bezieht. Als beste Visualisierungsform wird ein Symbol-Kartogramm mit einheitlichen Symbolen identiﬁziert. Die Metriken werden über die Sättigung der visuellen Variable dargestellt. Alle anderen Details können erst durch Interaktion aufgerufen werden, um in der Übersicht einen möglichst emotionalen und weniger wissenschaftlichen Stil zu erschaffen. Ein Problem der Visualisierung ist, dass die Datenmarker in der Übersicht zu klein sind, um vernünftig vom Benutzer erkannt zu werden, eine Lösung muss noch gefunden werden.\n\nEs wird ein Werkzeug konzipiert, dass Benutzer ohne Open Data Erfahrung an die kommunale Open Data Landschaft heranführt und sie in der Navigation in der Open Data Landschaft unterstützt. Gleichzeitig bietet das Ergebnis viele Ausgangspunkte, um die Navigation zu erweitern und zu verbessern.\n",
        "tags": []
    },
    {
        "uri": "/content/pulse/_index",
        "title": "Was geht?",
        "content": "\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n\n",
        "tags": []
    },
    {
        "uri": "/content/pulse/showcase-2017/index",
        "title": "Showcase 2017",
        "content": "\n",
        "tags": []
    },
    {
        "uri": "/content/study/_index",
        "title": "Hier kann man studieren!",
        "content": "\nAm Campus Gummersbach bieten wir zwei aufeinander aufbauende Studiengänge an: den Medieninformatik Bachelor und den Medieninformatik Master.\n\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/_index",
        "title": "Medieninformatik Bachelor",
        "content": "\nDer Bachelor Studiengang Medieninformatik ist ein sogenanntes berufsqualifizierendes grundständiges Studium und führt zum ersten Hochschulabschluss. Die Regelstudienzeit des anwendungsorientierten Informatikstudiengangs beträgt 6 Semester. Die Einschreibung ist ausschließlich zum Wintersemester möglich.\n\n!--more--\n\nDer Studiengang besteht im Kern aus zwei parallelen Strängen: einem Informatik und einem Medien-Strang. Die verschiedenen Module lassen sich mehr oder weniger gut diesen beiden Strängen zuordnen. Darüber hinaus gibt es eine Reihe von Modulen, die der Querschnittsqualifikation dienen, z.B. die Studierenden bei der Durchführung von Projekten oder im Umgang mit betriebswirtschaftlichen Frage- und Problemstellungen unterstützen. \n\nDas Studium verfolgt drei grundlegende Ziele:\n\nAufbau von Kommunikations- und Methodenkompetenz\nVermittlung eines umfassenden Technologieverständnis\nkennenlernen von Geschäftsprozessen und Kernaktivitäten der Medienwirtschaft\n\nDer zeitliche Ablauf des Studiums teilt sich in drei Abschnitte: Grundlagen, Vertiefung und Spezialisierung. In den ersten beiden Semestern überwiegen die Module aus dem Informatik Strang. Hier werden die mathematischen, theoretischen und technischen Grundlagen mit Lehrveranstaltungen wie Mathematik, Algorithmen und Programmierung, Theoretische Informatik und Einführung in Betriebssysteme und Rechnerarchitekturen vermittelt. Mit fortschreitender Fachsemesterzahl, nehmen die Module aus dem Medienstrang zunehmend Raum ein. \n\nIm vierten Semester kann im großen Vertiefungsmodul eine von drei Vertiefungsrichtungen gewählt werden. Zur Auswahl stehen: Visual Computing, Social Computing und Web-Development. Im Vertiefungsmodul ist ein Projektanteil von etwa fünf Creditpoints vorgesehen. Das Entwicklungsprojekt im fünften Semester kann entsprechend der fachlichen Neigung der jeweiligen Studierenden ausgestaltet werden.\n\nDas vierte Semester eignet sich aus verschiedenen Gründen gut für ein Auslandssemester. Die Studierenden verfügen über ausreichende Qualifikationen und Projekterfahrungen, um in verschiedenen Kontexten handlungsfähig zu sein. Sie stehen aber noch vor dem Spezialisierungsteil des Studiums und verfügen damit idealerweise über die fachliche, mentale und organisatorische Offenheit für ein Austauschsemester. Wegen der wenigen Module im vierten Semester und vor allem wegen des großen Vertiefungsmoduls können im Ausland erworbene Qualifikationen sehr flexibel anerkannt werden. Die Anerkennung erfolgt auf Basis des “Übereinkommen über die Anerkennung von Qualifikationen im Hochschulbereich in der europäischen Region”.\n\nDen Abschluss des Studiums bildet die Bachelorarbeit. In dieser bearbeiten die Studierenden selbstständig eine praxisorientierte Aufgabe aus einem gewünschten Fachgebiet. Diese können sie in Kooperation mit einem Unternehmen schreiben und somit Kontakte zur Wirtschaft und damit potentiellen Arbeitgebern knüpfen.\n\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/_index",
        "title": "Module",
        "content": "",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_AlgorithmenundProgrammierung1",
        "title": "Algorithmen und Programmierung 1",
        "content": "\nLehrform/SWS\n\n6 SWS: Vorlesung 3 SWS; Übung 1 SWS; Praktikum 2 SWS\n\n Arbeitsaufwand\n\nGesamtaufwand 240h, davon\n\n54h Vorlesung\n36h Praktikum\n18h Übung\n132h Selbststudium\n\nAngestrebte Lernergebnisse\n\nDie Studierenden sollen\n\nformale und algorithmische Kompetenzen im Bereich der Software-Entwicklung erlangen. Hierzu gehören insbesondere die Prinzipien der Objektorientierung und die der prozeduralen Programmierung.\ndie Kompetenz erlangen, strukturierte und unstrukturierte Problemstellungen zu analysieren, Lösungen modellbasiert zu entwickeln sowie prozedural und objektorientiert umzusetzen.\nSystementwürfe evaluieren und bewerten können, insbesondere sollen sie die Arbeitsweise, die Randbedingungen und den Komplexitätsgrad von einfachen Algorithmen verstehen.\ndie Fähigkeit erlernen, algorithmische Entwurfsmuster zu erkennen und anzuwenden\n\n Inhalt\nProzedurale Programmierung am Beispiel von C.\nObjektorientierte Programmierung am Beispiel von Java.\nKontroll- und Datenstrukturen.\nModularisierungskonzepte.\nTypkonzepte.\nGrundmuster der objektorientierten Programmierung.\nElementare Algorithmen und Aufwandsschätzung.\nEntwicklungsumgebungen.\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\n +++formen\nBeamer-gestützte Vorlesungen (Folien in elektronischer Form)\nPraktikum an Rechnern des Labors\n\nLiteratur\n\nVorlesungsunterlagen: Foliensammlung, ausformuliertes Skript, Beispiellösungen, Übungsklausuren mit Lösungen\nFachliteratur: Diverse C-Bücher, u.a.: Kernighan, B.W., Ritchie, D.M.: „Programmieren in C“\nDiverse Java-Bücher, u.a.: Bishop, J.: „Java Lernen“\nSedgewick, R.: „Algorithmen in Java“\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_AlgorithmenundProgrammierung2",
        "title": "Algorithmen und Programmierung 2",
        "content": "\nLehrform/SWS\n\n6 SWS: Vorlesung 3 SWS; Übung 1 SWS; Praktikum 2 SWS\n\n Arbeitsaufwand\n\nGesamtaufwand 210h, davon\n\n54h Vorlesung\n36h Praktikum\n18h Übung\n102h Selbststudium\n\nAngestrebte Lernergebnisse\n\nDie Studierende sollen Objektorientierung, die Prinzipien der Algorithmenentwicklung und grundlegende Algorithmen verstehen und die Grundstrukturen der Java-Bibliothek anwenden können.\n\n Inhalt\nBasisalgorithmen: Suchen u. Sortieren\nDatenstrukturen\nDictionaries\nMethodik des objektorientierten Programmierens\n\nStudien-/Prüfungsleistungen\n\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\n Medienformen\n\nBeamer-gestützte Vorlesungen (Folien in elektronischer Form)\nPraktikum an Rechnern des Labors\n\nLiteratur\n\nVorlesungsunterlagen: Foliensammlung, ausformuliertes Skript, Beispiellösungen\nFachliteratur: Bishop, J.: „Java Lernen“\nSedgewick, R.: „Algorithmen in Java“\nBarnes, J., Kölling, M.: „Java Lernen mit BlueJ“, Verweise auf Onlinedokumente\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_AVM",
        "title": "Audiovisuelles Medienprojekt",
        "content": "\nKurzbeschreibung\nIm Mittelpunkt dieses Moduls steht die digitale audiovisuelle Medienproduktion in den Formaten Porträt- und Dokumentarfilm.\n\n Lehrform/SWS\n4 SWS: Vorlesung 2 SWS; Projekt 2 SWS\n\nArbeitsaufwand\nGesamtaufwand 150h, davon\n36h Vorlesung\n36h Projektarbeit\n78h Selbststudium\n\n Angestrebte Lernergebnisse\nDie Studierenden kennen die grundlegenden Erzählformen und Formate audiovisueller Medien und können auf der Basis klassischer Erzählmuster eigene audiovisuelle Erzählformen entwickeln.\n\nDie Studierenden können die in der audiovisuellen Produktion auftretende Problemstellungen selbstständig lösen und die verwendeten Medientechnologien, wie Videokamera, Tonaufnahmegeräte und Schnittsysteme technisch richtig und gestalterisch aussagekräftig einzusetzen.\n\nSie sind befähigt zur Analyse, Diskussion und zur kritischen Betrachtung audiovisueller Medieninhalte.\n\nDie Studierenden können in den unterschiedlichsten Berufsfeldern digitaler audiovisueller Medien die Entwicklung und den Einsatz audiovisuellen Content beraten, planen, selbst durchführen und verantworten.\n\nInhalt\nIm Mittelpunkt dieses Moduls steht die digitale audiovisuelle Medienproduktion.\n\nDie praktische Umsetzung des Vorlesungsstoffes, die Kommunikation und Zusammenarbeit im Team  und die Präsentation von eigenen Ideen und Projekten sind die Lerninhalte des Moduls „Audiovisuelles Medienprojekt“. Neben der Fachkompetenz und Methodenkompetenz stehen in diesem Modul gerade die sogenannten Softskills Teamfähigkeit und Kommunikationsfähigkeit im Focus.\n\nDie Projektarbeit gliedert sich dabei in die selbstständige Entwicklung, Ausarbeitung und Präsentation eines Filmthemas, in die praktische Umsetzung in einem Filmprojekt und in die Nachbearbeitung und Montage in einer dramaturgischen Erzählform.\n\nBegleitend zu der Produktion werden folgende fachspezifischen Inhalte thematisiert und in Übungsaufgaben vertieft:\n\nVideo- und Audioaufnahmetechnik\nFilmsprache\nLichtsetzung\nTonaufnahme\nDokumentarfilm und Interview\nDramaturgie\nSchnitt und Montage\n\n Studien-/Prüfungsleistungen\nProjektarbeit\n\nMedienformen\nBeamer-gestützte Vorlesungen\nBeispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos\nAudiovisuelle Aufnahme- und Wiedergabegeräte\n\n Literatur\nJames Monaco, Film verstehen, Rowolth Taschenbuch Verlag Hamburg, 1980, ISBN 3-499-162717\nSyd Field, Drehbuchschreiben für Film und Fernsehen, München 2003, ISBN 354836473X\nSteven D. Katz, Die Richtige Einstellung, Zweitausendeins, Frankfurt a.M.1998,ISBN 3-86150-229-1\nDavid Lewis Yewdall, Practical Art of Motion Picture Sound, Focal Press, USA 2003, ISBN 0-240-80525-9\nHans Kornacher & Manfred Stross, Dokumentarisches Videofilmen, Augustus Verlag, Augsburg, 1992, ISBN 3-8043-5474-2\nHans Beller Hg., Handbuch der Filmmontage, München: TR-Verlagsunion, 1993, ISBN 3-8058-2357-6\nKarel Reisz, Gavin Millar, Geschichte und Technik der Filmmontage, München: Filmlandpresse, 1988, ISBN 3-88690-071-1\nChris Vogler, Die Reise des Drehbuchschreibens, Verlag Zweitausendeins\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Bachelorarbeit",
        "title": "Bachelorarbeit",
        "content": "\nLehrform/SWS\nAngeleitetes, eigenverantwortliches Arbeiten\n\n Arbeitsaufwand\n360 Stunden\n\nAngestrebte Lernergebnisse\nDie Bachelorarbeit soll zeigen, dass der Prüfling befähigt ist, innerhalb einer vorgegebenen Frist eine praxisorientierte Aufgabe aus seinem Fachgebiet sowohl in ihren fachlichen Einzelheiten als auch in den fachübergreifenden Zusammenhängen nach wissenschaftlichen, fachpraktischen und gestalterischen Methoden selbständig zu bearbeiten. Die Bachelorarbeit ist in der Regel eine eigenständige Untersuchung mit einer Aufgabenstellung aus der Medieninformatik und einer ausführlichen Beschreibung und Erläuterung ihrer Lösung. In fachlich geeigneten Fällen kann sie auch eine schriftliche Hausarbeit mit fachliterarischem Inhalt sein.\n\n Inhalt\nSelbstständiges wissenschaftliches, fachpraktisches und gestalterisches Bearbeiten einer Aufgabenstellung.\n\nStudien-/Prüfungsleistungen\nSchriftliche Ausarbeitung, ggf. Projektarbeit mit entsprechenden Artefakten.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Bachelorkolloquium",
        "title": "Bachelor Kolloquium",
        "content": "\nLehrform/SWS\nAngeleitetes, eigenverantwortliches Arbeiten\n\n Arbeitsaufwand\n90 Stunden\n\nAngestrebte Lernergebnisse\nDas Kolloquium dient der Feststellung, ob der Prüfling befähigt ist, die Ergebnisse der Bachelorarbeit, ihre fachlichen Grundlagen, ihre fachübergreifenden Zusammenhänge und ihre außerfachlichen Bezüge mündlich darzustellen und selbständig zu begründen und ihre Bedeutung für die Praxis einzuschätzen. Dabei soll auch die Bearbeitung des Themas der Bachelorarbeit mit dem Prüfling erörtert werden.\n\n Inhalt\nVortrag über das Thema der Bachelorarbeit, Fachdiskussion und mündliche Verteidigung der Arbeit im Kontext der Medieninformatik.\n\nStudien-/Prüfungsleistungen\nmündliche Prüfung, Vortrag\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_betriebssysteme-und-verteile-systeme",
        "title": "Betriebssysteme und verteilte Systeme",
        "content": "\nKurzbeschreibung\nSystemprogrammierung am Beispiel von UNIX.\n\n Lehrform/SWS\n4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\n\nArbeitsaufwand\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n36h Praktikum\n78h Selbststudium\n\n Angestrebte Lernergebnisse\n\nDie Studierenden können den Aufbau von Betriebssystemen am Beispiel UNIX erläutern, indem sie\ndie Ziele der Entwicklung von UNIX nennen und beschreiben,\ndie Hauptaufgaben von Betriebssystemen nennen und beschreiben,\nden Aufbau von Betriebssystemen darstellen und erklären,\n\num die verschiedenen Bestandteile und Konzepte von Betriebssystemen nutzen zu können.\n\nDie Studierenden können eigene C-Programme für verteilte Systeme erstellen, indem sie\neinen Computer über die Shell bedienen und dort eigene Programme ausführbar machen,\nDaten mittels Systemschnittstellen in Dateien speichern, daraus lesen und diese verwalten,\nSockets für Client- und Serverprogramme nutzen und Daten darüber senden und empfangen,\nProzesse für nebenläufige Programmabläufe erzeugen,\nKommunikation zwischen Prozessen mit Shared Memory, Pipes und Message Queues realisieren,\nRace Conditions erkennen, kritische Abschnitte festlegen und Prozesse synchronisieren,\ndie Lösungen klassischer Synchronisationsprobleme kennen und nutzen,\n\num später hardware- oder systemnahe Software für verteilte Systeme zu entwickeln oder zu bewerten, bspw. im Bereich »Internet of Things«\n\nDie Studierenden können theoretische Grundlagen von Betriebssystemen erörtern, indem sie\nProgramme und Prozesse unterscheiden und letztere mit ihren Zuständen modellieren,\nverschiedene Strategien für das Scheduling von Prozessen anwenden und bewerten,\ndie Organisation des Speichers auf einem Datenträger erklären und darstellen,\ndie Abbildung von Prozessen im Arbeitsspeicher erklären und verschiedene Ansätze zur Verwaltung erläutern,\n\num später Auswirkungen von Betriebssystemvorgängen auf eigene Programme zu erkennen und darauf zu reagieren.\n\nInhalt\n\nSystemprogrammierung am Beispiel von UNIX:\nShell-Programmierung\nProzess-Modelle\nProzess-Erzeugung und Synchronisation\nUNIX-Prozesse und elementare Synchronisation\nPipes\nShared Memory\nSynchronisationsprimitive für den wechselseitigen Ausschluss\nSemaphoren\nNachrichtenwarteschlangen\nDateisysteme\nTCP/IP\nSockets\nRemote Procedure Call\nStrategien zum Scheduling und zur Speicherverwaltung\nKlassische Synchronisationsprobleme\n\n Studien-/Prüfungsleistungen\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\nMedienformen\nFoliensammlung, ausformuliertes Skript, Beispiellösungen\n\n Literatur\nTanenbaum, A. S.: „Moderne Betriebssysteme“\nBrown, C.: „Programmieren verteilter UNIX-Anwendungen“\nKernighan, B. W., Pike, R.: „Der UNIX-Werkzeugkasten“\nEhses, E., Köhler, L., Stenzel, H., Victor, F. „Betriebssysteme: Ein Lehrbuch mit Übungen zur Systemprogrammierung in UNIX/Linux“\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_BWL1",
        "title": "BWL I - Grundlagen",
        "content": "\nLehrform/SWS\n4 SWS: Vorlesung 2 SWS; Übung 2 SWS\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n\n30h Vorlesung\n30h Übung\n90h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden verstehen die wichtigsten Entscheidungsbereiche wirtschaftlichen Handeln und können diese anwenden. Sie können grundlegenden Entscheidungen im Rahmen einer Unternehmensgründung, die Aufgaben der Unternehmensführung wie die Konzeption einer tragfähigen Strategie, und die Aufgaben der Teilbereiche Produktion, Absatz und Marketing sowie Investition und Finanzierung beschreiben und beurteilen. Investitionsentscheidungen können die Studierenden informationsgestützt treffen indem sie die Kalkulationsverfahren der Investitionsrechnung anwenden und auswerten. Die Veranstaltung bereitet die Studierenden für weitere BWL-Veranstaltungen ihres Studiums, sowie darauf, in ihrem Berufsleben wirtschaftliche Konzepte im Unternehmenskontext anzuwenden, vor.\n\n Inhalt\nGrundlagen\nUnternehmensführung 1: Ziele, Planung und Entscheidung\nInvestition und Finanzierung\nUnternehmensführung 2: Ausführung und Kontrolle\nKonstitutive Entscheidungen\nProduktion\nAbsatz und Marketing\n\nStudien-/Prüfungsleistungen\nschriftliche Prüfung\n\n Literatur\nWöhe (2016): Einführung in die Allgemeine Betriebswirtschaftslehre, 26. Aufl.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Datenbanken1",
        "title": "Datenbanken 1",
        "content": "\nLehrform/SWS\n\n4 SWS: Vorlesung 2 SWS; Übung 1 SWS; Praktikum 1 SWS\n\n Arbeitsaufwand\n\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n18h Praktikum\n18h Übung\n78h Selbststudium\n\nAngestrebte Lernergebnisse\n\nDie Studierenden sollen\n\nüber ein einheitliches konsistentes Begriffsgebäude bezüglich der Datenbankthematik verfügen,\ndie theoretischen Grundlagen von Datenbanksystemen am Beispiel relationaler und objektrelationaler Datenbanksysteme verstanden haben, insbesondere die relationale Algebra, die Normalisierung sowie funktionale Abhängigkeiten\nin der Lage sein, diese Erkenntnisse im Rahmen der Modellierung und Implementierung von Datenbankschemata praktisch anzuwenden,\nkomplexere Datenbankanfragen, Datendefinitionen und Datenänderungen über SQL programmieren  können\nein SQL-Statement tunen können\nmit dem Transaktionsbegriff, der Mehrbenutzersynchronisation und Verfahren zur Fehlererholung sowie zur Sicherung der Datenintegrität vertraut sein\n\n Inhalt\nGrundbegriffe und Architektur von Datenbanken  \nEin Vorgehensmodell zur Erstellung eines Datenbanksystems\nGrundlagen des relationalen Modells\nRelationale Algebra\nAnfrageoptimierung\nFunktionale Abhängigkeiten\nDatenintegrität\nNormalisierung\nDatenmodellierung (Entity Relationship Modell) und Implementierung am Beispiel eines relationalen Datenbanksystems\nDatenbanksprache SQL: DDL, DML, DAL, Integritätsbedingungen und Constraints unter dem jeweils aktuellen SQL-Standard, zur Zeit SQL2013\nTransaktionskonzepte, Mehrbenutzersynchronisation, Fehlererholung und Datensicherheit\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\nSemesterbegleitende Multiple‐Choice‐Tests mit Punkten für die Klausur.\n\n Medienformen\nFolien gestützer Vortrag - aber nur sehr selten  \nI.d.R. erarbeiten der Theorie anhand von überschaubaren Problemstellungen und deren in der Veranstaltung entwickelten Lösungen - hauptsächliches Vorgehen  \nFragen der Studierenden beantworten - sehr erwünscht!  \nIlias zur Bereitstellung aller Informationen (Aktuelles, Links, Folien, Praktikums-/Übungsaufgaben, wie auch Lösungen)  \nedb, die DB-eLearning-Plattform der TH Köln  \nDB-Wiki, das Online Lexikon für Datenbank-Themen\n\nLiteratur\nElmasri, R.; Navathe, S. B.: Grundlagen von Datenbanksystemen. Pearson‐Studium. 2009\nFaeskorn‐Woyke, H.; Bertelsmeier, B.; Riemer, P.; Bauer, E.: Datenbanksysteme ‐ Theorie und Praxis mit SQL2003, Oracle und MySQL. Pearson‐Studium. 2. Aufl. 2011\nKemper, A.; Eickler, A.: Datenbanksysteme – Eine Einführung. Oldenbourg‐Verlag, 2015\nSaake, G., Sattler, K.‐U.; Heuer, A.: Datenbanken ‐ Konzepte und Sprachen. Mitp/bhv, 2013\nVossen, G.: Datenmodelle, Datenbanksprachen, Datenbankmanagementsysteme. Oldenbourg‐Verlag, 2008\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_EinfhrunginBetriebssystemeundRechnerarchitektur",
        "title": "Einführung in Betriebssysteme und Rechnerarchitektur",
        "content": "\nLehrform/SWS\n\n4 SWS: Vorlesung 2 SWS; Übung 2 SWS\n\n Arbeitsaufwand\n\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n36h Übung\n78h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden sollen die Basiskonzepte und Grundlagen der Betriebssysteme und der Rechnerarchitektur kennen und verstehen, sowie ein einheitliches konsistentes Begriffsgebäude zu, teilweise aus der persönlichen Praxis bekannten, Sachverhalten der IT aufbauen und anwenden können.\n\n Inhalt\nBetriebssysteme aus Nutzersicht: Dateisysteme, Parallele Prozesse, Sicherheit in Betriebssystemen\nbei Rechnerkomponenten: grundlegende Architekturen, Darstellung von Daten, interne Bussysteme, Prozessoren, Festplatten, Peripherieschnittstellen, Parallelrechner\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung.\n\n Literatur\nVorlesungsunterlagen: kommentierte Foliensammlung\nTanenbaum: „Rechnerarchitektur“\nTanenbaum: „Modern Operating Systems“\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_EinfhrungindieMedieninformatik",
        "title": "Einführung in die Medieninformatik",
        "content": "\nLehrform/SWS\n4 SWS: Seminar 3 SWS; Übung 1 SWS\n\nSeminar mit eingebetteten Übungselementen und Projektarbeit.\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n\n30h Seminar\n10h Übung\n40h Projekt\n70h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden können die inhaltlichen Ausrichtungen und die Zielsetzungen der Lehr- und Anwendungsdisziplin Medieninformatik benennen und gegenüber verwandten oder ähnlichen Disziplinen abgrenzen.\n\nDie Studierenden kennen Grundkonzepte der Informatik (z.B. Anforderungen) sowie audiovisueller und interaktiver Medientechnologien, kennen architekturelle Alternativen interaktiver Systeme und kennen Gestaltungsdimensionen für deren Informations- und Kommunikationsinhalte und können diese Kenntnisse auf eine gegebene Problemstellung anwenden.\n\nDie Studierenden sind sensibilisiert für Modellierungs- und Entwicklungsaufgaben von medienbasierten Software-Systemen zur Unterstützung menschlichen Handelns in betrieblichen und privaten Kontexten.\n\nSie kennen grundlegende Konzepte, Prozesse/Verfahren und Modelle der Medieninformatik und haben erste Projekterfahrungen gesammelt. Sie können Systemkonzeptionen, zugehörige Modellierungen, Abwägungen und Artefakte für ein Fachpublikum angemessen dokumentieren und mittels verschiedener medialer Formen kommunizieren.\n\n Inhalt\nWorkshops zu grundlegenden projektrelevanten Themenfeldern (wie: Datenmodellierung, Pseudo-Code, Kommunikation in verteilen medialen Systeme, Visual Thinking, Storytelling, Anforderungen) und deren Anwendung, illustriert anhand von Fallstudien.\n\nTeambasiertes Projekt, welches ausgehend von Kontextszenarien eine (oder mehrere) Problemstellung(en) umreist, zu dem Lösungen konzipiert und prototypisch umgesetzt, dokumentiert und einem Fachpublikum präsentiert werden müssen.\n\nStudien-/Prüfungsleistungen\nProjektpräsentation(30%) und schriftliche Ausarbeitung(70%).\n\n Medienformen\nBeamer-gestützte Vorlesungen (Folien in elektronischer Form)\nVorträge\nverschiedene Präsentationsmaterialien (Whiteboard, Poster, etc.)\nEinsatz von Bild- und Videobearbeitungssoftware\nUmgang mit Kameras im Projektteil\n\nLiteratur\nMichael Herczeg: Einführung in die Medieninformatik, Oldenbourg Verlag, 2006, ISBN: 3-486-581-031\nChris Rupp et al: Requirements-Engineering und -Management: Aus der Praxis von klassisch bis agil, Carl Hanser Verlag; 6-te Auflage, 2014, ISBN-10: 3446438939\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Entwicklungsprojekt",
        "title": "Entwicklungsprojekt",
        "content": "\nLehrform/SWS\n2 SWS: Seminar 2 SWS; Projektarbeit\n\n Arbeitsaufwand\nGesamtaufwand 300h, davon\n36h Seminar\n264h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden sollen vertiefende Kenntnisse in die Methoden und Techniken aus zwei ausgewählten Modulen aus den ersten vier Fachsemestern des Studiums erlangen und diese in der Konzeption und prototypischen Realisierung eines interaktiven Systems oder Mediums anwenden. Dadurch sollen sie eigene Erfahrungen in der Projektabwicklung mit Medieninformatik-spezifischen Fragestellungen und in der Teamarbeit sammeln und eine reflektierend-kritische Haltung zu methodischen Ansätzen und Entwicklungsmodellen entwickeln. Ziel ist es eine, mit eigenen praktischen Erfahrungen fundierte Methodenkompetenz zu erlangen.\n\nDie Studierenden sollen darüberhinaus lernen, die Vorgehensweise und die Ergebnisse ihres Projektes in einem kritischen Diskurs vor einem Fachpublikum zu vertreten, um in der Berufspraxis ihre Herangehensweise und Projektergebnisse vertreten zu können.\n\n Inhalt\nDie Projekte werden in Teams durchgeführt. Zunächst werden von den Teams zwei Module aus den ersten vier Fachsemestern gewählt, welche die fachlichen Perspektiven für die Vertiefung bestimmen. In Absprache mit den Lehrenden werden dann Projektziele festgelegt.\n\nAus dem Methoden- und Technikkatalog (siehe Vorlesungen zu den Lehrbereichen) wird in Absprache mit den Lehrenden eine Auswahl der einzusetzenden Entwicklungstechniken und -methoden sowie der einzuhaltenden Entwicklungsmodelle getroffen und Qualitätssicherungsmaßnahmen und das Prozessmanagement definiert.\n\nDie Lehrenden bieten dann während der Projektdurchführung Beratung bzgl. des adäquaten Einsatzes der gewählten Methoden und Techniken. Zwischenstände des Projektes werden zu definierten Meilensteinen von den Projektteams präsentiert. Die Präsentation der Projektergebnisse findet in einem Plenum mit kritischer Diskussion der Methoden und Ergebnisse statt.\n\nStudien-/Prüfungsleistungen\nDie Projektergebnis, bestehend aus Prototyp und Dokumentation, geht mit 80% in die Projektnote ein, die Kommunikation der Zwischenergebnisse und des Endergebnisses mit 20%.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Grundlagen_des_Web",
        "title": "Grundlagen des Web",
        "content": "\nKurzbeschreibung\nIn der Veranstaltung werden wesentliche Grundideen, Interaktionsprinzipien, Contentarchitekturen und Sicherheitsmechanismen eingeführt, die das Web als Medium konstituieren.\n\n Lehrform/SWS\n4 SWS: Vorlesung 2 SWS; Seminar 2 SWS\n\nArbeitsaufwand\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n36h Seminar\n78h Selbststudium\n\n Angestrebte Lernergebnisse\nDie Studierenden\nkennen wesentliche Grundideen, Interaktionsprinzipien, Contentarchitekturen und Sicherheitsmechanismen, die das Web als Medium konstituieren und\nkönnen moderne Webanwendungen auf der Basis von Fachbegriffen analysieren und einordnen\n\num kompetent am fachlichen Diskurs über Eigenschaften, Auswirkungen und Gestaltungsalternativen von Web Anwendungen teilnehmen zu können.\n\nInhalt\nWeb Architektur des W3C\nOfffenheit und Verwendung von Standards als Prinzip\nInteraktionsformen: Synchrone Interaktion auf der Basis von REST, asynchrone Interaktion mit Publish/Subscribe\nFallstudien: Cloudservices für verteilte Anwendungen - z.B. Amazon Web Services, Google Firebase\nAusgewählte Sicherheitsmechanismen im Web\nInhaltsarchitekturen: XML, JSON, Microformate, RDFa\n\nDie Inhalte werden als Vorlesung vermittelt. In dem begleitenden Seminar werden die Konzepte mittels Fallstudien anwendungsbezogen analysiert und diskutiert.\n\n Studien-/Prüfungsleistungen\nMündliche Prüfung\n\nMedienformen\nFolienpräsentation\nAuschnitte aus der Literatur als Leseaufgaben und Fallstudien\n\n Literatur\nRandy Conolly, Richard Hoar: Fundamentals of Web Development, Pearson Publishing 2015\nHugh Taylor et al.: Event-Driven Architecture - How SOA Enables the Real-Time Enterprise, Addison-Wesley 2009\nWebber: REST in Practice, OReilly 2011\nSam Newman: Building Micro Services, OReilly 2015\nJames Governor et al.: Web 2.0 Architectures, OReilly 2009\nRajkumar Buyya (ed.): Internet of Things: Principles and Paradigms, Morgan Kaufmann 2016\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_KommunikationstechnikundNetze",
        "title": "Kommunikationstechnik und Netze",
        "content": "\nLehrform/SWS\nVorlesung, Praktikum\n\n Arbeitsaufwand\n\nAngestrebte Lernergebnisse\nDie Studierenden sollen  \n\nPrinzipien und Grundlagen von technischen Kommunikations­vor­gängen kennen lernen,\nProtokolle als wesentliche Grundlage der Kommunikationstechnik im Detail verstehen (Internet-Protokolle, Multimedia-Protokolle, TK-Protokolle, Dienste)\nEinsatz und Nutzung von Kommunikations­tech­nik praxistypisch kennen lernen,\nin der Lage sein, selbstständig Netzstrukturen zu bewerten, Netze zu analysieren und zu konzipieren (unter Anwendung von Netz­analyse­werkzeugen und -methoden).\n\n Inhalt\nGrundbegriffe und Grundlagen, Kommunikationssysteme (Modelle, Grundbegriffe), Protokolle, Schnittstellen, Dienste, Architekturmodelle (OSI-Referenzmodell, TCP/IP-Protokollfamilie), Standardisierung, TCP/IP-Protokollfamilie als Grundlage des Internet, Schichtenmodell und Protokolle im Detail, Adressierung, ausgewählte Anwendungen, Klassifizierung von Netzen / Topologien / Technologien, Wegewahl / Vermittlung / Routing, Vermittlungsprinzipien, Routing-Verfahren und  Protokolle, Internet-spezifische Verfahren, Multimedia-Netze, Dienstgüte, Internet-Telefonie, Realisierung von Multimedia-Netzen, Netzsicherheit, grundlegende Begriffe der „IT-Sicherheit“, typische Bedrohungen in Netzen, Beispielszenarien\n\nStudien-/Prüfungsleistungen\n\n Medienformen\nVorlesung im Hörsaal (PowerPoint und Beamer)  \nPraktikum an Rechnern des KTDS-Labors; Ressourcen: Netzanalysesoftware,div. Netzüberwachungssoftware, E-Mail-Server und -Clients, DNS-Server, ggf. weitereServer-Implementierungen\n\nLiteratur\nWird in der Veranstaltung bekannt gegeben\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Mathematik1",
        "title": "Mathematik 1",
        "content": "\nLehrform/SWS\n6 SWS: Vorlesung  3 SWS; Praktikum 1 SWS; Übung 2 SWS\n\n Arbeitsaufwand\n\nGesamtaufwand 210h, davon\n\n54h Vorlesung\n18h Praktikum\n36h Übung\n102h Selbststudium\n\nAngestrebte Lernergebnisse\n\nDie Studierenden sollen die Fähigkeiten zur Analyse realer oder geplanter Systeme entwickeln, indem sie praktische Aufgabenstellungen aus dem Informatik-Umfeld in mathematische Strukturen abstrahieren und lernen, selbstständig  die Modellfindung und die Ergebnisbeurteilung vorzunehmen. Dabei sollen die Anwendungsbezüge der Mathematik deutlich werden, z.B. die Bedeutung funktionaler Beziehungen für kontinuierliche Zusammenhänge, die lineare Algebra z.B als Grundlage der grafischen Datenverarbeitung und die Analysis zur Verarbeitung von Signalen und zur Lösung von mathematischen Modellen.\n\n Inhalt\nGrundlagen\nFolgen\nFunktionen\nDifferenzialrechnung (1 Veränderliche)\nIntegralrechnung\nLineare Algebra\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\n Literatur\nSkript unter www.gm.fh-koeln.de/~konen\nTeschl, Gerald und Teschl, Susanne: \"Mathematik für Informatiker\", Springer Verlag, 4. Auflage, 2013\nHartmann, Peter: \"Mathematik für Informatiker-Ein praxisbezogenes Lehrbuch\" Vieweg Verlag, 475 Seiten, 3. Auflage 2006\nPapula, Lothar: \"Mathematik für Ingenieure und Naturwissenschaftler\" Vieweg Verlag, 14. Auflage, 2014\nStingl, Mathematik für Fachhochschulen, Hanser 2003\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Mathematik2",
        "title": "Mathematik 2",
        "content": "\nLehrform/SWS\n6 SWS: Vorlesung  3 SWS; Praktikum 1 SWS; Übung 2 SWS\n\n Arbeitsaufwand\n\nGesamtaufwand 240h, davon\n\n54h Vorlesung\n18h Praktikum\n36h Übung\n132h Selbststudium\n\nAngestrebte Lernergebnisse\n\nDie Studierenden sollen die Fähigkeiten zur Analyse realer oder geplanter Systeme entwickeln, indem sie praktische Aufgabenstellungen aus dem Informatik-Umfeld in mathematische Strukturen abstrahieren und lernen, selbstständig die Modellfindung und die Ergebnisbeurteilung vorzunehmen. Dabei sollen die Anwendungsbezüge der Mathematik deutlich werden, z.B. die Beziehungen diskreter Strukturen wie der Graphen zu vielfältigen grundlegenden Datenstrukturen, die Statistik zur Deskription und Beurteilung von Beobachtungen und die Analysis zur Verarbeitung von Signalen und zur Lösung von mathematischen Modellen.\n\n Inhalt\nMehrdimensionale Differenzialrechnung,\nGraphentheorie,\nKombinatorik, Wahrscheinlichkeitsrechnung und Statistik,\nKomplexe Zahlen,\nDifferentialgleichungen.\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\n Literatur\ns. Literaturliste auf der Homepage www.gm.fh-koeln.de/~konen\nSkript unter www.gm.fh-koeln.de/~konen/Mathe2-SS\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Mensch-Computer_Interaktion",
        "title": "Mensch-Computer Interaktion",
        "content": "\nLehrform/SWS\nVorlesung und Praktikum/Übung\n\n Arbeitsaufwand\nGesamtaufwand 300h, davon\n\n65h Vorlesung\n65h Praktikum/Übung\n170h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden erwerben Grundkenntnisse in kognitions-, arbeits- und organisations-psychologischen Grundkonzepten und können diese auf Problemstellungen, im Kontext der Mensch-Computer Interaktion, anwenden.\nDie Studierenden kennen Modelle, Methoden, Arbeits- und Dokumentationstechniken der Mensch-Computer Interaktion, können sie anwenden, kritisch diskutieren und für konkrete Aktivitäten in Entwicklungsprojekten unter Abwägung der Alternativen auswählen.\nSie kennen relevante internationale Normen und Standards, können sie anwenden und erarbeitete Ergebnisse kritisch diskutieren und einordnen.\nSie kennen methodische Ansätze benutzer- oder benutzungsorientierter Entwicklungsprozesse und können diese systematisch und iterativ auf die Konzeption, Realisation, Evaluation und das Redesign von interaktiven Systemen anwenden.\nZudem kennen sie Konzepte und Vorgehensmodelle für die Integration von Software- und Usability Engineering in einem Gesamtprozess und können diese in Entwicklungsprojekten anwenden.\nDie Studierenden erlangen die Fähigkeit zum fachlichen Diskurs.\n\n Inhalt\n\nkognitionspsychologische Grundlagen\nBenutzermodellierung\nTätigkeitsmodellierung\nSpezifikationsformen für Nutzungskontexte\nSpezifikation von Nutzungsanforderungen\nInteraktionsmodelle\nInteraktionsmodalitäten und –kodalitäten\nVorgehensmodelle (human-centered, usability-engineering, usage-centered design)\nDesign-Prinzipien, -Pattern, -Guidelines, -Styleguides\nPrototyping und Sketching\nEvaluation\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung.\n\n Medienformen\nBeamergestützte Vorlesung\nCase Studies\nLehrfilme\n\nLiteratur\nDix, A.; Finlay, J.; Abowd, G. & Beale, R.: Human-Computer Interaction. Harlow, Pearson, 2004 (3rd ed.),\nBenyon, D., Turner, S. Turner, P.  Designing Interactive Systems: People, Activities, Contexts, Technologies, Addison Wesley, 2005,\nAnderson, J.R.: Kognitive Psychologie. Heidelberg, Springer, 2001 (3. Auflage).\nBeyer H. & Holtzblatt K.: Contextual Design: Defining Customer-Centered Systems. San Francisco Morgan Kaufmann, 1997.\nCockburn, A.: Writing Effective Use Cases. Boston, Addison-Wesley, 2000.\nConstantine, L.; Lockwood, L.: Software for Use, ACM Press, 1999.\nDumas, J.S. & Redish, J.C.: A Practical Guide to Usability Testing. Exter, Intellect Books, 1999 (rev. edition).\nHacker, W.: Allgemeine Arbeitspsychologie. Bern, Huber, 1998.\nHackos, J. & Redish, J.: User and Task Analysis for Interface Design. New York, Wiley, 1998.\nHoltzblatt K.; Wendell, J.B. & Wood, S.: Rapid Contextual Design. A How-to Guide to Key Techniques for User-Centered Design. San Francisco, Morgan Kaufmann, 2005.\nJohnson, J.: GUI Bloopers. San Francisco, Morgan Kaufmann, 2000.\nKulak, D. & Guiney, E.: Use Cases. Requirements in Context. Boston, Addison-Wesley, 2000.\nMayhew, D.: The Usability Engineering Lifecycle. A Practitioner´s Handbook for User Interface Design. San Francisco: Morgan Kaufmann, 1999.\nNielsen, J. & Mack, R.L. (eds.): Usability Inspection Methods. NewYork, Wiley, 1994.\nPreece, J; Rogers, Y. & Sharp, H.: Interaction Design. Beyond Human-Computer Interaction. NewYork, Wiley, 2002.\nRosson, M.B. & Carroll, J.M.: Usability Engineering. Scenario-Based Development of Human-Computer Interaction. San Francisco, Morgan Kaufmann, 2002.\nSnyder, C: Paper Prototyping. San Francisco, Morgan Kaufmann, 2003.\nUlich, E.: Arbeitspsychologie. Stuttgart, Schäffer-Poeschel, 2001 (5.Auflage).\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_MUG",
        "title": "Informatik, Recht und Gesellschaft",
        "content": "\nLehrform/SWS\n4 SWS: Vorlesung 2 SWS; Übung 2 SWS\n\n Arbeitsaufwand\nGesamtaufwand: 150h, davon\n\n36h Vorlesung\n36h Übung\n78h Selbststudium\n\nAngestrebte Lernergebnisse\nInformatikerinnen und Informatiker analysieren und konstruieren sozio-technische Systeme und entwickeln dabei semiotische Artefakte wie z.B. Spezifikationen, Programme und Handbücher. Die entwickelten Systeme bilden einerseits soziale Wirklichkeit in vielfältiger Form ab und ändern andererseits diese Wirklichkeit durch ihren Einsatz.\n\nDie Studierenden sollen befähigt werden\n\nethische und rechtliche Aspekte des Einsatzes von Informatik-Systemen zu charakterisieren und\nein kritisches Bewusstsein für die aktuellen Fragen des wechselseitigen Einflusses von Informatik und Gesellschaft zu entwickeln sowie\ndie Grundbegriffe des deutschen Privatrechts zu verstehen und sich im dazugehörigen Gesetzeswerk zu orientieren,\num die unterschiedlichen Wechselwirkungen zwischen Informatik-Systemen und ihrem Einsatzumfeld erkennen und bewerten und insbesondere im Bereich des Vertragsrechts selbständige Lösungsvorschläge erarbeiten zu können.\n\n Inhalt\n\nInformatik und Gesellschaft\n\nDie Wechselwirkungen zwischen den von Informatikern entwickelten Systemen und ihrem Einsatzumfeld werden in drei großen Themenblöcken behandelt:\n\nInformatik und soziale Kontexte\nKomplexität und Sicherheit in sozio-technischenen Systemen\nSystemgestaltung und Verantwortung der Informatik.\n\nBeispielhafte Inhalte:\nGeschichte der Informatik\nBildung und Wissenschaft\nWissenschaften und Gesellschaft\nDigitale Medien und Internet\nDatenschutz und Überwachungstechniken\nInformatik und Gestaltung\npartizipative Systemgestaltung\nOpen Source\nEthische Leitlinien für Informatiker\nNormen und Standards\nphilosophische Aspekte der Informatik\n\n Recht\n\nEinführung in das deutsche Privatrecht, insbesondere in das BGB.\nSchwerpunkt im Schuldrecht, hier insbesondere im Vertragsrecht.\nBesondere Aspekte des Verbraucherschutzes und der inhaltlichen Gestaltung von Verträgen.\nIm Allgemeinen Teil des BGB wird auf den Vertragsschluss, die Willenerklärung als rechtsgeschäftliches Gestaltungsmittel und die allgemeinen Anforderungen an die Vertragspartner eingegangen.\n\nStudien-/Prüfungsleistungen\n Informatik und Gesellschaft\nPräsentation im OpenSpace, Klausur (60 Min).\n\nRecht\nKlausur (60 Min.)\n\n Medienformen\nBeamergestützte Vorträge\n\nLiteratur\n IUG\n\nSara Baase: A Gift of Fire. Social, Legal, and Ethical Issues in Computing. Prentice Hall, Upper Saddle River, 1997\nA.F. Chalmers: Wege der Wissenschaft. 5. Aufl., Springer, Heidelberg, 2001\nD.M. Hester, P.J. Ford: Computers and Ethics in the Cyberage. Prentice Hall, Upper Saddle River, 2001\nP. Gola, C. Klug: Grundzüge des Datenschutzrechts. C.H. Beck, 2003\nM. Pierson, D. Seiler: Internet-Recht im Unternehmen. Beck-Rechtsberater im dtv, Deutscher Taschenbuch Verlag, München, 2002\nhttp://www.gi-ev.de Arbeitskreis Informatik und Verantwortung, Ethische Leitlinien der GI\nhttp://www.bfd.bund.de Der Bundesbeauftragte für den Datenschutz\nhttp://www.aktiv.org/DVD Deutsche Vereinigung für Datenschutz\nhttp://www.big-brother-award.org Überwachungsinformationen\n\nRecht\n\nBürgerliches Gesetzbuch in der aktuellen Taschenbuchausgabe des dtv\n\n Fakultativ\n\nEugen Klunziger, Einführung in das Bürgerliche Recht, Verlag Vahlen\nNorbert Ullrich, Wirtschaftsrecht für Betriebswirte, Verlag Neue Wirtschaftsbriefe\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Paradigmen-der-Programmierung",
        "title": "Paradigmen der Programmierung",
        "content": "\nLehrform/SWS\n4 SWS: Vorlesung 2 SWS; Praktikum 1 SWS; Übung 1 SWS\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n18h Praktikum\n18h Übung\n78h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden sollen unterschiedliche Programmierparadigmen verstehen und anwenden können. Weiterhin sollen sie die Angemessenheit der verschiedenen Programmierparadigmen für eine Aufgabenstellung einordnen und bewerten können. Studierende sollen mithilfe von etablierten Paradigmen und Entwurfsmustern in der Lage sein, synchrone und asynchrone Programme zu konzipieren und ablaufsicher zu gestalten.\n\n Inhalt\nGrundlagen von Programmiersprachen\nVergleich imperativer und deklarativer Paradigmen\nprozedurale und objektorientierte Programmierung\nfunktionale Programmierung\nLogikprogrammierung\nNebenläufigkeit\nEntwurfsmuster\n\nStudien-/Prüfungsleistungen\nKlausur sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\n Medienformen\nFoliensammlung\nScreencasts\nSkript\nBeispiellösungen\n\nLiteratur\nAbelson, Sussman, Struktur und Interpretation von Computer Programmen,Springer-Verlag 2001\nW.F. Clocksin, C.S. Mellish, Programming in Prolog, Springer-Verlag 2003\nGamma, E., Helm, R., Johnson, R., & Vlissides, J. (2015). Design patterns: Entwurfsmuster als Elemente wiederverwendbarer objektorientierter Software. Frechen: Mitp.\nOdersky, Spoon, Venners, Programming in Scala, Artima Press 2011\nGoetz, B., Peierls, T., Bloch, J., Bowbeer, J., Holmes, D., Lea, D. (2006). Java-Concurrency in Practise. Addison Wesley.\nTate, B. A., & Klicman, P. (2011). Sieben Wochen, sieben Sprachen: Verstehen Sie die modernen Sprachkonzepte. Sebastopol: O'Reilly.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Praxisprojektarbeit",
        "title": "Praxisprojekt",
        "content": "\nLehrform/SWS\nAngeleitetes, eigenverantwortliches Arbeiten\n\n Arbeitsaufwand\n300 h Projektarbeit\n\nAngestrebte Lernergebnisse\nDie Studierenden\n\nkönnen Methoden und Techniken, die sie im Studium erlernt haben, in realitätsnahen Projekten weitgehend selbstständig anwenden\n\nhaben erste Erfahrungen mit der Selbststeuerung und proaktiven Kommunikation in einem Projekt mittlerer Größe und der Einordnung von Projektarbeit in betriebliche, gesellschaftliche und rechtliche Rahmenbedingungen gesammelt\n\n Inhalt\n\nModulinhalte des ersten bis fünften Semesters anhand von realen Anforderungen in einem praxisrelevanten Kontext anwenden und den Studierenden durch die Betreuung des Dozenten an eine selbstständige Projektdurchführung und Kommunikation heranführen. Das Praxisprojekt kann entweder in einem Unternehmen oder in der Hochschule - dann eingebettet in Forschungsprojekte - erfolgen.\n\nStudien-/Prüfungsleistungen\nSchriftliche Ausarbeitung, Projektdokumentation\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Praxisprojektseminar",
        "title": "Praxisprojektseminar",
        "content": "\nLehrform/SWS\n4 SWS: Seminar\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n\n32h Seminar\n118h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden  \n\nkennen Techniken wissenschaftlichen Arbeitens und können diese anwenden\nhaben erste Erfahrungen mit aktiver Fachkommunikation gesammelt\ngewinnen einen ersten Überblick über das Spektrum von aktuellen Themen in der Medieninformatik\nkönnen eigene Projektergebnisse vor einem Fachpublikum in Vortrag und Diskussion darstellen und verteidigen\n\n Inhalt\nDas Praxisprojektseminar besteht aus\n\nVeranstaltungen in denen Techniken wissenschaftlichen Arbeitens vermittelt werden,\nAudits über den aktuellen Stand ihres Projektes,\nFachvorträgen von Studierenden über ihre Projektergebnisse.\n\nStudien-/Prüfungsleistungen\nSeminarvortrag zur Praxisprojektarbeit\n\n Literatur\nRechenberg: Technisches Schreiben (nicht nur) für Informatiker, 2. Aufl, Hanser Verlag 2003\nM. Karmasin, R. Ribing: Die Gestaltung wissenschaftlicher Arbeiten, 2. Auflage WUV 2007\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Projektmanagement",
        "title": "Projektmanagement",
        "content": "\nKurzbeschreibung\nManagementaspekte der professionellen Entwicklung großer Softwaresysteme\n\n Lehrform/SWS\n4 SWS: Vorlesung 2 SWS, Übung 1 SWS, Praktikum 1 SWS; max. 6 Studierende pro Praktikumsteam;\n\nArbeitsaufwand\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n18h Übung\n18h Praktikum\n78h Selbststudium\n\n Angestrebte Lernergebnisse\nDie Studierenden sollen befähigt werden,\n\ndie grundlegenden Aufgaben des Projektmanagements, insbesondere in IT-Projekten, zu charakterisieren und durchzuführen\ndie Projektmanagement-Methoden, -Techniken und -Werkzeuge zielgerichtet einzusetzen\ndie erforderlichen soziologischen und kommunikativen Aspekte zu berücksichtigen, um, mit dem Ziel einer menschengerechten und soziologisch fundierten Menschenführung, eine wirkliche und optimale Produktivität bei komplexen Projekten erreichen zu können.\n\nInhalt\nDas Modul befasst sich mit den Managementaspekten der professionellen Entwicklung großer Softwaresysteme.\nDer Vorlesungsteil des Moduls gliedert sich in folgende Kapitel:\n\nÜberblick – Warum Projektmanagement?\nTeamarbeit und Menschenführung (Kommunikation und Führung)\nKosten/Nutzen-Analysen und Entscheidungstechniken\nProjektorganisation und Projektplanung (Aufbauorganisation, Ablauforganisation, Prozessmodellierung, iterative und agile Vorgehensmodelle, Netzplantechnik)\ndetaillierte Aufwandsschätzung und Projektcontrolling (Function Point Analysis, COCOMO, Risikomanagement, Projektpräsentationen)\nInhalte von PM-BOK (Project Management - Body of Knowledge)\nZusammenfassung und Prüfungsvorbereitung;\n\nDamit die Studierenden die vorgestellten Methoden und Techniken zum Management von Softwareprojekten anwenden, sowie besser analysieren und bewerten können, werden in Projekt-Teams die in der Vorlesung vermittelten Inhalte anhand eines Fallbeispiels eingesetzt. Dazu bilden die Teilnehmenden Teams zu jeweils 6 Studierenden. Im Projekt werden folgende Bereiche vertieft:\n\nKosten- Nutzenrechnung, Entscheidungstechniken\nAufbauorganisation\nAufwandsschätzung (Function-Point-Analyse, COCOMO);\nRisikomanagement\nAblauf- und Ressourcenplanung (Netzplantechnik, Einsatz von PM-Software wie z.B. MS-Project)\n\n Studien-/Prüfungsleistungen\nProjekt-Ausarbeitung (30%)\nVortrag (30%)\nSchriftliche Prüfung (40%).\n\nMedienformen\nBeamer-gestützte Vorlesungen (Folien in elektronischer Form im Netz);\nVertiefende Unterlagen sowie aktuelle Artikel (in elektronischer Form im Netz);\nProjektarbeit in Kleingruppen, um die erlernten Methoden und Techniken einzuüben und zu vertiefen (Seminarraum, Rechnerlabor);\n\n Literatur\nA. Buhl: Grundkurs Projektmanagement. Carl Hanser Verlag, München, 2004\nH.W. Wieczorrek, P. Mertens: Management von IT-Projekten Von der Planung zur Realisierung. 4. Aufl., Springer, Heidelberg, 2011\nC. Aichele, M. Schönberger: IT-Projektmanagement. Springer Vieweg, 2014\nA. Henrich: Management von Softwareprojekten. Oldenbourg Verlag, München, 2002\nH. Kerzner: Projektmanagement – Ein systemorientierter Ansatz. mitp-Verlag, Bonn, 2003\nT. DeMarco: Der Termin. Hanser, München, 1998\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Screendesign",
        "title": "Screendesign",
        "content": "\nLehrform/SWS\n4 SWS: Vorlesung 1 SWS; Seminar 3 SWS\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n\n15h Vorlesung\n45h Seminar\n80h Projektarbeit  \n10h Selbststudium\n\nAngestrebte Lernergebnisse\nDie Studierenden kennen wesentliche Begriffe der visuellen Kommunikation und können diese anwenden um Briefings, Angebote oder Korrekturwünsche im Design-Kontext zu verstehen oder zu verfassen.\n\nDie Studierenden können Gestaltungslösungen und -kontexte analysieren, argumentieren, diskutieren, dokumentieren und bewerten, um eigene Lösungen innerhalb eines Gestaltungskontextes generieren zu können.\n\nDie Studierenden können in einem gegebenen Gestaltungskontext, unter Berücksichtigung von Gestaltungsregeln (Raster, Layout, Typographie, etc.), eigene Gestaltungslösungen entwickeln, systematisch variieren und argumentieren um gegebene funktionale und/oder kommunikative Ziele zu adressieren.\n\n Inhalt\n\nVorlesung\nDesign Basics\nAxis Map & Semantisches Differential\nKommunikationsmodelle\nVisuelle Wahrnehmung\nBenutzerziele\nCorporate Identity\nOrientierung, Hierarchisierung, Reduktion\nRäumlichkeit\nGestaltgesetze\nFarbe, Kontraste\nTypographie, Textsatz\nProportion\nOrdnung, visuelle Struktur, Flow & Transistion\nGestaltungsziele, Gestaltungsprozess\n\n Seminar\nDesignprojekte strukturieren\nLayoutentwicklung mit Wireframes\nLayoutentwicklung für verschiedene Endgeräte\nFlow & Transition\nTypographie & Textsatz\nDesignkonzepte analysieren & bewerten\nVariantenbildung\nModularisierung, Interface Inventar aufbauen & visualisieren\n\nStudien-/Prüfungsleistungen\nProjekt und Projektpräsentationsprüfung.\n\n Medienformen\nBeamergestützte Vorträge, Rechnergestützte  Workshops\n\nLiteratur\nStapelkamp, Torsten: Informationsvisualisierung\nJoachim Böhringer, Peter Bühler & Patrick Schlaich: Kompendium der Mediengestaltung - Konzeption und Gestaltung für Digital- und Printmedien\nStapelkamp, Torsten: Screen- und Interfacedesign\nMax Bollwage: Typografie kompakt\nKerstin Alexander: Kompendium der visuellen Information und Kommunikation\nMaeda, John:Simplicity!: Die zehn Gesetze der Einfachheit\nLidwell, William; Holden, Kristina; Butler, Jill: Design: Die 100 Prinzipien für erfolgreiche Gestaltung\nLewandowsky, Pina; Zeischegg, Francis: Visuelles Gestalten mit dem Computer\nKoschembar, Frank: Grafik für Nicht-Grafiker\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Softwaretechnik",
        "title": "Softwaretechnik",
        "content": "\nKurzbeschreibung\nPrinzipien, Methoden und Techniken der modellbasierten methodischen objektorientierten Softwareentwicklung\n\n Lehrform/SWS\n4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\n\nmax. 15 Studierende/Praktikumsgruppe;\n\nArbeitsaufwand\nGesamtaufwand 150h, davon\n\n36h Vorlesung\n36h Praktikum\n78h Selbststudium\n\n Angestrebte Lernergebnisse\nDie Studierenden sollen befähigt werden,\nzu abstrahieren, Modelle zu entwickeln, Unterschiede zwischen Modell und Realität zu beurteilen sowie\ngegebene Modelle zu interpretieren, zu analysieren und zu bewerten,\num komplexe Systeme zu analysieren, im Team zu entwerfen und dabei im Rahmen methodischer Vorgehensweisen Techniken und Werkzeuge der objektorientierten Modellierung und Softwareentwicklung in den Aktivitäten Anforderungsermittlung, Softwarespezifizierung und Entwurf einzusetzen.\n\nInhalt\n\nDie Vorlesung skizziert zunächst das Gesamtgebiet Softwaretechnik und behandelt dann ausschließlich grundlegende „Informatikaspekte” der objektorientierten Softwareentwicklung. Als wesentliche Grundlage werden die wichtigsten Elemente der Unified Modelling Language (UML) vorgestellt und anhand kleinerer Beispiele erläutert. Danach werden typische Aktivitäten der Softwareentwicklung besprochen, wobei die UML als Modellierungssprache benutzt wird. Im Praktikum werden die Anwendung der Modellierungselemente und die Durchführung der Aktivitäten in Gruppenarbeit vertieft.  \n\nDas Modul gliedert sich in folgende Inhalte:\n(10%) Softwareentwicklung im Überblick (Komplexität großer Software, Kernaktivitäten und unterstützende Aktivitäten);\n(30%) Die Modellierungssprache UML (Strukturmodellierung mit Objekt- und Klassendiagrammen, Funktionsmodellierung mit Anwendungsfalldiagrammen, Verhaltensmodellierung mit Sequenz-, Kommunikations- und Zustandsdiagrammen);\n(50%) Modellbasierte Softwareentwicklung (Anforderungsermittlung, Softwarespezifizierung und Architekturkonzeption, Entwurfskonzepte und Grobentwurf, Feinentwurf);\n(10%) Zusammenfassung und Ausblick (Modellgetriebene Softwareentwicklung);\n\n Studien-/Prüfungsleistungen\nSchriftliche Prüfung, sowie erfolgreiche Teilnahme am Praktikum als Prüfungsvorleistung.\n\nMedienformen\nFlipped-Classroom mit Diskussion und Übungen als Einzel- und Kleinstgrupen\ne-Vorlesungen (Video-Clips und Folien in elektronischer Form zum Selbststudium);\nVertiefende Materialien in elektronischer Form (z.B. SWEBOK)\nPraktika in Kleingruppen, um die erlernten Modelle und Methoden einzuüben und zu vertiefen (Seminarraum, Rechnerlabor); In den Praktika werden Modellierungs- und Entwicklungswerkzeuge eingesetzt.\n\n Literatur\nHelmut Balzert: Lehrbuch der Software-Technik Bd. I: Basiskonzepte und Requirements Engineering; Spektrum Akademischer Verlag, Heidelberg, 3. Aufl. 2009\nHelmut Balzert: Lehrbuch der Software-Technik Bd. II: Entwurf, Implementierung, Installation und Betrieb; Spektrum Akademischer Verlag, Heidelberg, 3. Aufl. 2012\nHelmut Balzert: Lehrbuch der Software-Technik Bd. III: Software Management; Spektrum Akademischer Verlag, Heidelberg, 2. Aufl. 2008\nMartina Seidl et al.: UML@Classroom; dpunkt.Verlag, Heidelberg, 2012\n  Unterlagen/Videos: http://www.uml.ac.at/lernen\nWinter, M.: Methodische objektorientierte Softwareentwicklung. dpunkt.verlag, Heidelberg, 2005;\nChris Rupp et al.: UML 2 Glasklar. 4. Aufl., Carl Hanser Verlag, München, 2012\nJochen Ludewig, Horst Lichter: Software Engineering – Grundlagen, Menschen, Prozesse, Techniken. 2. Aufl., dPunkt Verlag, Heidelberg, 2011\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_TheoretischeInformatik1",
        "title": "Theoretische Informatik 1",
        "content": "\nLehrform/SWS\n4 SWS: Vorlesung 2 SWS; Übung 2 SWS\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n36h Vorlesung\n36h Übung\n78h Selbstlernphase\n\nAngestrebte Lernergebnisse\n\nGrundsätzliches Ziel des Kurses ist eine Einführung in die Begriffe, Methoden, Modelle und Arbeitsweise der Theoretischen Informatik anhand der ausgewählten Teilgebiete.\nDabei lernen die Studierenden Probleme und Sachverhalte zu abstrahieren und zu modellieren (etwa logische und algebraische Kalküle, graphentheoretische Notationen, formale Sprachen und Automaten sowie spezielle Kalküle wie Petri-Netze)\nDie Studierenden erwerben fundierte Kenntnisse der grundlegenden Themengebiete und eine wesentliche Basis und Vorbereitung für Veranstaltungen in höheren Semestern des Studiums.\nIn verschiedenen Grundlagengebieten der Informatik lernen die Studierenden Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und können passende Algorithmen entwerfen (Automaten, Turing Maschinen, Logik). Dabei können Sie bekannte Problemstellungen im Anwendungskontext erkennen und sind mit den zugehörigen Lösungsmustern vertraut (Modellierung mittels Automaten, Petri-Netzen, Boolescher Algebra, etc.).\nAufgaben zu den Lehrinhalten (s.u.) werden in kleinen Gruppen (Teamarbeit) selbständig gelöst. Die Lösungen sollen in den Übungsstunden vorgetragen und der Lösungsweg den Kommilitonen hierbei erläutert werden.\n\n Inhalt\nMengen\nRelationen\nGraphen\nZahlensysteme\nZahlendarstellung\nNumerische Aspekte\nCodierung, Informationstheorie\nBoolesche Algebra\nSchaltnetze und Schaltwerke\nAussagenlogik\nPrädikatenlogik\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung.\n\n Literatur\nHoffmann, D. (2011): Theoretische Informatik, 2. Auflage\nHedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München.\nKelly, J. ( 2003 ): Logik. Pearson Studium, München.\nEhrig, H. et al. (1999): Mathematisch-strukturelle Grundlagen der Informatik. Springer,  Heidelberg.\nBeuth, K. (1992): Digitaltechnik. 9.Aufl.Vogel, Würzburg.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_TheoretischeInformatik2",
        "title": "Theoretische Informatik 2",
        "content": "\nLehrform/SWS\n4 SWS: Vorlesung 2 SWS; Übung 2 SWS\n\n Arbeitsaufwand\nGesamtaufwand 150h, davon\n36h Vorlesung\n36h Übung\n78h Selbstlernphase\n\nAngestrebte Lernergebnisse\nsiehe Theoretische Informatik 1.\n\n Inhalt\nReguläre (Typ-3) Sprachen: Endliche Automaten, Reguläre Ausdrücke; Typ3-Grammatiken, Syntaxdiagramme; Chomsky-Hierarchie\nModellierung sequentieller und paralleler (Ausgabe-) Prozesse: Endliche Maschinen, Berechnungen; Automatennetze, Petri-Netze, Zelluläre Automaten\nKontextfreie (Typ-2) Sprachen: Kontextfreie Grammatiken, Chomsky- und Greibach-Normalform; Kellerautomaten; Anwendungen (Ableitungs- und Syntaxbäume, Syntax von Programmiersprachen, Backus-Naur-Form)\nKontextsensitive (Typ-1) und rekursiv aufzählende (Typ-0) Sprachen: Grammatiken, Monotonie, Normalform; Turingautomaten; Einführung in die Begriffe: Berechenbarkeit, Entscheidbarkeit und Komplexität\n\nStudien-/Prüfungsleistungen\nSchriftliche Prüfung.\n\n Literatur\nHoffmann, D. (2011): Theoretische Informatik, 2. Auflage\nVossen, G., Witt K. (2004): Grundlagen der Theoretischen Informatik mit Anwendungen. 3. Aufl.  Vieweg & Sohn, Braunschweig.\nHedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München.\nAsteroth, A., Baier, C. (2002) Theoretische Informatik. Pearson Studium München\nHopcroft, J. E.  et al. (2002): Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Pearson Studium, München.\nSchöning, U. (1997): Theoretische Informatik - kurzgefaßt. 3. Aufl. Spektrum Akademischer Verlag, Heidelberg.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Vertiefung_SocialComputing",
        "title": "Social Computing",
        "content": "\nKurzbeschreibung\nIn der Vertiefung „Social Computing” werden die Wechselwirkungen zwischen Gesellschaft und Informatik in den Mittelpunkt gestellt. Rechnersysteme und Netzwerke werden von Menschen intentional gestaltet, ausgerichtet an gesellschaftlichen Normen, Prozessen und Bedürfnissen. Gleichzeitig beeinflussen IT-Systeme diese gesellschaftlichen Normen und verändern Prozesse in allen Lebensbereichen. Die verantwortungsbewusste Konzeption und Realisierung von soziotechnischen Systemen (z.B. Social Software, Online Communities, e-Health, e-Government und e-Learning Angebote) sowie die empirische Evaluation existierender Systeme sind zentrale Ziele. Lösungen sollen unter ganzheitlichen Gesichtspunkten entwickelt werden. Verschiedene Wertvorstellungen und Interessen unterschiedlicher Stakeholder müssen identifiziert und berücksichtig werden.\n\nDas Modul verbindet daher Theorien, Modelle und Methodik der Human- und Sozialwissenschaften mit anwendungsorientierter Informatik.\n\n Lehrform/SWS\n16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS\n\nLehrveranstaltungen\nSoziotechnische Systeme\nEmpirische Forschungsmethoden\nGamification\nSocial Computing Projekt\n\n Arbeitsaufwand\n600h Gesamtaufwand\n\nSoziotechnische Systeme\n50h Vorlesung, Seminar; 100h Selbstlernphase\n\n Empirische Forschungsmethoden\n50h Vorlesung, Seminar; 100h Selbstlernphase\n\nGamification\n50h Vorlesung, Seminar; 100h Selbstlernphase\n\n Social Computing Projekt\n150h Projekt\n\nAngestrebte Lernergebnisse\nStudierende sollen in der Lage sein, computergestützte Systeme nach ethischen, politischen, sozialen und psychologischen Kriterien zu bewerten, zu planen und umsetzen zu können.\nZiel ist es, soziale Innovation durch digitale Anwendungen entstehen zu lassen. Neben den empirischen Methoden werden Designmethoden vermittelt, sowohl auf der konzeptionellen als auch auf der softwaretechnischen Implementierungsebene, um robuste, sichere und flexible Systeme zu gestalten.\n\n Soziotechnische Systeme\nDie Studierenden sollen das komplexe Wechselspiel zwischen informationstechnischen Systemen und gesellschaftlichen Normen und Prozessen verstehen, analysieren und einordnen können. Sie sollen in der Lage sein, Systeme nach ethischen, psychologischen und soziologischen Kriterien zu gestalten und die Auswirkungen einschätzen zu können. Die grundlegenden Modelle der verschiedenen Disziplinen sollen bekannt und verstanden werden.\n\nEmpirische Forschungsmethoden\nDie Studierenden sollen die unterschiedlichen Herangehensweisen quantitativer und qualitativer Forschungsmethoden verstehen. Darüber hinaus sollen ausgewählte quantitative und qualitative Methoden angewendet werden können. Die Studierenden sollen in der Lage sein, einfache Forschungsdesigns zu entwickeln und nach wissenschaftlichen Standards durchzuführen.\n\n Gamification\nDie Studierenden sollen in der Lage sein, die Möglichkeiten und Grenzen des Gamification-Ansatzes, sowohl für die analoge als auch die digitale Welt, einordnen zu können. Die verschiedenen Stufen der Gamification sollen verstanden und die Maßnahmen in Gestaltungsprozessen eingesetzt werden. Die Studierenden sollen die psychologischen Grundlagen verstehen und die gesellschaftlichen Implikationen bewerten können. Die Analyse von Regeln und Prozessen und daraus abgeleitete Gamification-Maßnahmen sowie die Entwicklung von Serious Games sollen praktisch umgesetzt werden, z.B. für Lernanwendungen, Online-Communities oder soziale Dienste.\n\nInhalt\n\n Soziotechnische Systeme\nModelle der Sozioinformatik\nE-Learning\nGestaltungsprinzipien für soziotechnische Systeme\nTechnikgenese und Ko-Evolution\nComputerethische Grundlagen\nPsychologische Grundlagen\nSoziologische Grundlagen\nDigitale Technologien für soziale Dienste\nDigitale Technologien in Organisationen\nDigitale Technologien in der Gesellschaft\nE-Goverment\n\nEmpirische Forschungsmethoden\nWissenschaftstheoretische Grundlagen\nInduktion, Deduktion, Abduktion\nUnterschied zwischen quantitativer und qualitativer Forschung\nInterviews gestalten, durchführen und auswerten\nBeobachtungsmethoden\nEthnographische Methoden\nHypothesengewinnung und Theoriebildung\nExperimental-Designs\nStatistische Verfahren für quantitative Forschung\nAussagekraft der Ergebnisse (statistische Signifikanz, interne und externe Valididät)\n\n Gamification\nGrundelemente der Gamification\nStufen der Gamification\nLudifikation\nHistorische Grundlagen\nPsychologische Grundlagen\nGesellschaftliche Einordnung\nEinsatzgebiete verstehen und einordnen\nPlanung und Realisierung von Gamification\nGestaltungregeln\nSerious Games\n\nStudien-/Prüfungsleistungen\nProjektarbeit mit Projektpräsentationsprüfung und Fachgespräch, sowie schriftliche Ausarbeitung.\n\n Medienformen\nBeamer-gestützte Vorlesungen (Folien in elektronischer Form)\nScreencasts und Handouts\nBeispielmedien\nArbeit im Innovationsraum mit digitalen Whiteboards, Spiel-Arcarde, Tablets und Gestaltungsmaterialien\n\nLiteratur\nDeKoven, B., & MIT Press. (2013). The well-played game: A player's philosophy. Cambridge: The MIT Press.\nDöring, N. & Bortz, J. (2015). Forschungsmethoden und Evaluation: Für Human- und Sozialwissenschaftler. Berlin [u.a.]: Springer.\nFlick, U. (2011). Qualitative Sozialforschung: Eine Einführung. Reinbek bei Hamburg: Rowohlt-Taschenbuch-Verl.\nFullerton, T., Swain, C., & Hoffman, S. (2008). Game design workshop: A playcentric approach to creating innovative games. Amsterdam: Elsevier Morgan Kaufmann.\nKienle, A., Kunau, G.  (2014). Informatik und Gesellschaft. Eine sozio-technische Perspektive. München: Oldenbourg Wissenschaftsverlag.\nKoster, R. (2013). Theory of Fun for Game Design. Sebastopol: O'Reilly.\nPopper, K. R. (1972). The logic of scientific discovery. London: Hutchinson.\nSalen, K., & Zimmerman, E. (2007). Rules of play: Game design fundamentals. Cambridge, Mass. [u.a.: The MIT Press.\nSchnädelbach, H. (2002). Erkenntnistheorie zur Einführung. Zur Einführung, 268. Hamburg: Junius.\nWestermann, R. (2000). Wissenschaftstheorie und Experimentalmethodik: Ein Lehrbuch zur psychologischen Methodenlehre. Göttingen [u.a.]: Hogrefe, Verl. für Psychologie.\nZweig, K. A., In Neuser, W., In Pipek, V., In Rohde, M., & In Scholtes, I. (2014). Socioinformatics: The social impact of interactions between humans and IT.\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Vertiefung-Visual-Computing",
        "title": "Visual Computing",
        "content": "\nKurzbeschreibung\nDas Modul „Visual Computing” im Medieninformatik Bachelor beschäftigt sich mit der Erzeugung und Verarbeitung visueller Informationen, sowohl in realen als auch computergenerierten Szenarien.\n\nZiel dieses Moduls ist es den Studierenden eine fachlich fundierte, praktische, sowie theoretische Grundlage im Umgang mit audiovisuellen Medien zu geben. Dabei wird sowohl auf die technische Seite (technischen Grundlagen der Video- und Fernsehtechnik) eingegangen als auch auf die algorithmische (computergenerierte Bildsynthese, Gameentwicklung).\n\nDas Modul ist aus vier Teilbereichen aufgebaut, von denen zwei verpflichtend sind und zwei weitere aus einem Wahlkatalog gewählt werden können.\nDie beiden Pflichtkurse schaffen ein Fundament, was es erlaubt innerhalb der beiden verbliebenen Kurse, im Gesamtumfang von 10 CP, tiefer in die jeweilige Spezialisierung einzutauchen. Dabei gibt es grundsätzlich die Möglichkeit sich in Richtung Fernseh- und Videoproduktion oder Gameentwicklung zu vertiefen.\nDie Kurse werden nach Verfügbarkeit angeboten.\n\nDie Kurse sind in der Regel projektbasiert aufgebaut, so dass sowohl theoretischer Hintergrund als auch praxisnahes Wissen vermittelt wird und zur Anwendung kommt.\n\n Lehrform/SWS\nVorlesung, Praktikum / Projekt, Übung mit kursabhängigen Schwerpunkten\n4 SWS: Vorlesung 2 SWS; Praktikum 2 SWS\n\nLehrveranstaltungen\n\n Pflichtmovule im Gesamtumfang von 10CP\nAudiovisuelle Medientechnik\nComputergrafik und Animation\n\nAus den folgenden Wahlkatalogen sind zwei weitere Kurse zu jeweils 5CP zu belegen, welche nach Verfügbarkeit angeboten werden.\n\nWahlkatalog Film/Video\nAudiovisuelles Medienprojekt 2\nVisuelle Effekte und Animation\n\n Wahlkatalog Game Development\nCrossplatform Game Development mit Unity3D\nProzedurale Generierung virtueller Welten\n\nArbeitsaufwand\n600h Gesamtaufwand\n\n Audiovisuelle Medientechnik\n36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\n\nComputergrafik und Animation\n36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\n\n Audiovisuelles Medienprojekt 2\n36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\n\nVisuelle Effekte und Animation\n36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\n\n Crossplatform Game Development mit Unity3D\n36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\n\nProzedurale Generierung virtueller Welten\n36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase\n\n Angestrebte Lernergebnisse\nJe nach gewählten Vertiefungskursen entwickeln die Studierenden Fähigkeiten zur selbstverantwortlichen Durchführung von Projekten im Bereich Gamedevelopment, dreidimensionaler Darstellung virtueller Szenen, Film- und Fernsehtechnik, sowie Visueller Effekte.\n\nAudiovisuelle Medientechnik\nDie Studierenden sollen durch dieses Modul dazu befähigt werden, auf Basis der technischen Grundlagen der Video- und Fernsehtechnik weitergehende Fragestellungen selbstständig zu erarbeiten und sich so auch zukünftige technische Entwicklungen autonom erschließen zu können.\nNeben der Entwicklung und Förderung dieser Fachkompetenz ist die Initiierung der Methodenkompetenz eine wichtige Säule des Vorlesungsmoduls. Unter Methodenkompetenz ist hier die Selbstorganisation im Sinne von wissenschaftlicher Fragestellung an einen Themenkomplex und ein strukturiertes Vorgehen in der Erarbeitung eines Lösungsansatzes zu verstehen. Ziel ist es, das Wissen aus verschiedenen Bereichen, wie Kerninformatik, Internet- und Webtechnologien und benachbarten Wissenschaften mit der in diesem Modul unterrichteten Medientechnologien zu kombinieren und in die Medienproduktion zu integrieren.\nGerade der Umgang mit Technologien und Methoden aus der Film- und Fernsehproduktion erweitert den Erfahrungshorizont der Studierenden über den bekannten Themenbereich der Kerninformatik hinaus und legt ihnen eine Einarbeitung in informatikfremde Sachverhalte und technologische Problemstellungen und deren Lösungsmethoden nahe.\nPragmatisches Ziel ist es, in den unterschiedlichsten Berufsfeldern audiovisueller Medien die Entwicklung und den Einsatz digitaler Medientechnik zu beraten, zu planen, durchzuführen oder zu verantworten.\n\n Computergrafik und Animation\nDie Grundlagen der zwei- und insbesondere der dreidimensionalen Computergraphik und Animation stellen ein hervorragendes Paradigma zur Vermittlung zentraler Inhalte und Kompetenzen der Medieninformatik dar.\n\nDen Studierenden wird deutlich, wie der Bogen von den abstrakten, geometrischen und algorithmischen Fakten zu den pragmatischen Gegebenheiten der Computergraphik-Hardware gespannt ist.\nSie erkennen die Zusammenhänge zwischen Grundlagenvorlesungen (Mathematik, Algorithmen, Programmierung) und der Gestaltung von Schnittstellen und Oberflächen und werden so für die jeweiligen Inhalte zusätzlich motiviert.\nDabei lernen Sie, im Kontext der Computergrafik, Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und können Algorithmen entwerfen, verifizieren und bzgl. ihres Ressourcenbedarfs bewerten.\nSie erwerben die Fähigkeit, aktuelle technologische Entwicklungen im Medieninformatik-Kontext zu bewerten und Trends einzuordnen.\n\nNach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse über Architektur und Programmierung moderner Graphikhardware, sowie deren Anwendung in konkreten Problemstellungen und Anwendungskontexten.\nAm Beispiel von OpenGL und der Rendering-Pipeline lernen die Studierenden Problemstellungen im Anwendungskontext zu erkennen und sind mit den zugehörigen Lösungsmustern durch praktische Programmierung vertraut.\n\nDas erlernte Wissen und die erlernten Kenntnisse in der Soft- und Grafikhardware-Architektur ermöglicht es erfolgreichen Teilnehmern, anschließend Echtzeit-Visualisierungen mit OpenGL zu implementieren und somit mit einer modernen, plattformunabhängigen API umzugehen, die flexibel an bestehende Anforderungen angepasst werden kann. Zudem haben Sie die Fähigkeit hochparallele Algorithmen auf der Graphikkarte zu entwerfen und auszuführen.\n\nDabei beherrschen die Studierenden nach Abschluss des Moduls die Fähigkeit abstrakte Szenen- und Objektbeschreibungen zu erstellen und darzustellen, sowie sich in vorhandenen Quelltext einzuarbeiten und diesen sinnvoll weiter zu entwickeln.\nDie Inhalte des Moduls befähigen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergraphik zu beherrschen.\nDie Studierenden können ihr erworbenes Können und Wissen zur Implementierung einer eigenen Game/Visualisierungs-Engine einsetzen. Dies zeigen Sie durch Umsetzung eines eigenen Projektes in Kleingruppen, wo sie zusätzlich lernen mündlich überzeugend zu präsentieren, abweichende Positionen zu erkennen und in eine sach- und interessengerechte Lösung zu integrieren. Sie zeigen dadurch, dass Sie in der Lage sind sich selbstständig neues Wissen anzueigenen und zu erkennen, welches Wissen relevant ist, können mediengestalterische Grundkompetenzen anwenden und besitzen aktive Vokabularien zur Beschreibung und Realisierung angemessener Konzeptionen. Zudem können sie die Realisationen bezüglich der Zielsetzungen kritisch diskutieren.\n\nAudiovisuelles Medienprojekt 2\nDie praktische Umsetzung des Vorlesungsstoffes, die Kommunikation und Zusammenarbeit im Team über Themenbereiche dieses Faches und die Präsentation von eigenen Projekten und Untersuchungsergebnissen sind die Lernziele des Moduls Audiovisuelles Medienprojekt 2. Neben dieser formulierten Fachkompetenz, Methodenkompetenz und Kommunikationskompetenz stehen gerade die sogenannten Softskills Teamfähigkeit und Kommunikationsfähigkeit im Focus der Ausbildung in diesem Modul.\n\nDie Studierenden kennen über die grundlegenden Erzählformen audiovisueller Medien hinaus spezielle Formate wie Spielfilm, Imagefilm und Studioproduktion und haben dabei folgende Fertigkeiten: Sie können eigene audiovisuelle Erzählformen auf der Basis dieser Erzählmuster entwickeln und sind befähigt zur Analyse, zur Diskussion und zur kritischen Betrachtung audiovisueller Medieninhalte.\n\nPragmatisches Ziel ist es, in den unterschiedlichsten Berufsfeldern digitaler audiovisueller Medien die Entwicklung und den Einsatz audiovisuellen Content zu beraten, zu planen, durchzuführen oder zu verantworten.\n\n Visuelle Effekte und Animation\nDie Studierenden kennen die grundlegenden Produktionsschritte und Abläufe einer Film- und TV-Produktion mit visuellen Effekten sowie die in diesem Zusammenhang eingesetzten Softwaretools.\n\nSie haben die Fertigkeit, spezifische Fragestellungen der Umsetzung visueller, computerbasierter Effekte und der damit zusammenhängenden Bildbearbeitung zu bearbeiten und fallbezogene individuelle Lösungen zu entwickeln.\n\nUnter Entwicklungs- und Methodenkompetenz auf dem Gebiet der Visual Effects ist die Fähigkeit zu verstehen, eigene und für den jeweiligen Anwendungsfall auch eventuell neue Lösungsansätze zu entwickeln, bei denen die unterschiedlichen Methoden der Visual Effects-Ausführung und -Bearbeitung zum Einsatz kommen. Nachdem die Planung, Durchführung und die Bearbeitung von Projekten auf dem Gebiet der Film- und TV-Produktion mit visuellen Effekten in der Regel im kleinen Team erfolgt sind gerade die Softskills der Teamkompetenz und der Organisationskompetenz von großer Wichtigkeit in diesem Modul.\n\nBerufsbilder, die von diesem Modul angesprochen werden, sind zum einen in der Visual-Effects-spezifischen Softwareentwicklung, als auch im Anwendungskontext zu finden: So zum Beispiel in der Planung, Organisation, Durchführung und Verantwortung von VFX-Projekten.\n\nCross-Platform Game Development mit Unity 3D\nDie Studierenden kennen wesentliche Konzepte und Technologien des Game Developments mit Unity 3D und können diese anwenden, um eigenständig im Team Interaktive Applikationen zu konzipieren, realisieren und optimieren.\n\nDie Studierenden kennen die grundlegenden Möglichkeiten von Game Engine Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts die Umsetzungsmöglichkeiten und Vorgehen zu evaluieren und entsprechende Strategien zu entwickeln, sowie kritisch die benötigten Bibliotheken und Komponenten auszuwählen und diese Wahl zu begründen.\n\nDie Kursteilnehmer sammeln im Rahmen ihres eigenständig entwickelten Projektes Erfahrungen in der Entwicklung von Kleinprojekten bis mindestens zum Grad einer spielbaren Alphaversion oder eines Prototypen.\n\n Prozedurale Generierung virtueller Welten\nDie Studierenden haben die Möglichkeit ihr Wissen über 3D-Computergrafik, 3D-Geometrie und Programmierung zu vertiefen und praktisch anzuwenden. Durch den Einsatz von Unity als Crossplatform-Game-Development-Tool können die Studierenden ihre Erfahrung mit einer aktuellen Game-Engine und der dazugehörigen Entwicklungsumgebung vertiefen und werden befähigt diese um Funktionalitäten zu erweitern.\n\nDie Inhalte des Moduls befähigen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergrafik mit der Game-Engine Unity zu beherrschen.\nDas Modul ist daher geeignet das Wissen aus den Modulen „Computergrafik und Animation“, sowie ”Cross-Platform Game Development mit Unity 3D” zu vertiefen und zu erweitern.\n\nKonzepte aus der 3D-Computergrafik und der prozeduralen Generierung werden in diesem sehr praktisch ausgelegten Kurs implementiert und die relevanten Grundlagen vermittelt, die es den Studierenden ermöglichen eigenständig Anforderungen für Projekte mit prozeduralen Techniken zu entwickeln und diese praktisch umzusetzen und kritisch zu evaluieren.\n\nNach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse über verschiedene Techniken der prozeduralen Generierung zur Erstellung von 3D Content für Visualisierungen, Simulationen und Spiele, sowie die Fähigkeiten diese einzusetzen, sowie selbst zu entwickeln.\n\nInhalt\n\n Audiovisuelle Medientechnik\nGrundlagen der Fernsehtechnik\nDigitale Fernsehtechnik\nHD-Technik\nVideodatenreduktion\nBildwandler\nDas optische System der Videokamera\nSignalverarbeitung in der Videokamera\nSignalaufzeichnung\nElektroakustik\nBildwiedergabesysteme\nLichttechnik und Beleuchtung\n\nComputergrafik und Animation\nGraphikhardware,\nOpenGL\nTransformationen und homogene Koordinaten\nInterpolation\nKameramodelle\nClipping\nShaderprogrammierung\nAnimation\nTexturierung\nFortgeschrittene Algorithmen (Schatten, Reflexionen, Bump-, Normal-, Parallax-, Relief-Mapping, Globale Beleuchtung, Deferred Shading)\nPerzeption\nGrundlagen des Ray Tracings\n\n Audiovisuelles Medienprojekt 2\nVertiefung der Video- und Audioaufnahmetechnik\nVerschiedene Dramaturgiemodelle\nDrehbuch, Auflösung, Storyboard\nSchnitt und Montage\nLiveproduktion im Studio\nMedienproduktion in den Formaten Spielfilm, Imagefilm und Studioproduktion\n\nVisuelle Effekte und Animation\nStoryboard\nKalkulation\nProduktionabläufe\nKeyverfahren mit Green- und Bluescreen\nCompositing\nUmgang mit Bild-/Videobearbeitungswerkzeugen\n\n Cross-Platform Game Development mit Unity 3D\nAufbau einer Game Engine\nGameobjects\nGame Physics\nInteraktion\nSpielmechaniken\n\nProzedurale Generierung virtueller Welten\nEinführung in die Game-Engine Unity\nPrimitive und Mesh-Datenstrukturen\nUV-Mapping und Texturierungstechniken/Materialien\nProzedurale Texturgenerierung\nParametrisierung von 3D-Modellen\nKurven und Flächen\nHeight-Maps\nL-Systeme und „Turtle“-Grafik-Renderer\nTriangulations-Algorithmen für Polygone\nVoxel-Terrain-Generierung\nGrundlagen 3D-Geometrie\nErweiterung des Unity-Editors\n\n Studien-/Prüfungsleistungen\nTeilprüfungen in den jeweiligen Kursen. Die Benotung ergibt sich als Mittel aus den jeweiligen Teilnoten.\n\nAudiovisuelle Medientechnik\nSchriftliche Prüfung.\n\n Computergrafik und Animation\nDie erfolgreiche Teilnahme an den Praktika ist Voraussetzung für die Klausur oder mündliche Prüfung\n\nAudiovisuelles Medienprojekt 2\nProjektarbeit\n\n Visuelle Effekte und Animation\nProjektarbeit(50%) und schriftliche Ausarbeitung(50%)\n\nCross-Platform Game Development mit Unity 3D\nPräsentation und Dokumentation eines eigenständig entwickelten Projekts\n\n Prozedurale Generierung virtueller Welten\nDie erfolgreiche Teilnahme am Abschlussprojekt (eigenständiges Projekt, auch in Kleingruppen möglich) und Fachgespräch\n\nMedienformen\nBeamer-gestützte Vorlesungen\nRechnergestützte Workshops\nBeispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos\nAudiovisuelle Aufnahme- und Wiedergabegeräte\n\n Literatur\n\nAudiovisuelle Medientechnik\nSchmidt Ulrich, Professionelle Videotechnik, Springer-Verlag Berlin Heidelberg New York 2013, ISBN 978-3-642-38992-4\nJohannes Webers, Film- und Fernsehtechnik, Franzis Verlag, Poing 2000, ISBN 3-7723-7116-7\nMöllering, Slansky, Handbuch der professionellen Videoaufnahme Edition Filmwerkstatt, Essen, 1993, ISBN 3 - 9 802 581 - 3 - 0\n\n Computergrafik und Animation\nPeter Shirley, Fundamentals of Computer Graphics, Peters, Wellesley\nAndrew Woo, et al., OpenGL Programming Guide, Version 4.3, Addison-Wesley,\nTomas Akenine-Möller, Eric Haines, und Naty Hoffman, Real-Time Rendering, 3. Ausgabe, Peters, Wellesley\nRandi J. Rost, John M. Kessenich, Barthold Lichtenbelt, OpenGL Shading Language, 2. Ausgabe, Addison-Wesley\nAlan Watt, 3D Computer Graphics, Addison-Wesley\nFrank Nielsen, Visual Computing, Charles River Media, 2005\nJames Foley, Andries Van Dam, et al., Computer Graphics : Principles and Practice, 2. Ausgabe, Addison-Wesley\n\nAudiovisuelles Medienprojekt 2\nJames Monaco, Film verstehen, Rowolth Taschenbuch Verlag Hamburg, 1980, ISBN 3-499-162717\nSyd Field, Drehbuchschreiben für Film und Fernsehen, München 2003, ISBN 354836473X\nSteven D. Katz, Die Richtige Einstellung, Zweitausendeins, Frankfurt a.M.1998,ISBN 3-86150-229-1\nDavid Lewis Yewdall, Practical Art of Motion Picture Sound, Focal Press, USA 2003, ISBN 0-240-80525-9\nHans Kornacher & Manfred Stross, Dokumentarisches Videofilmen, Augustus Verlag, Augsburg, 1992, ISBN 3-8043-5474-2\nHans Beller Hg., Handbuch der Filmmontage, München: TR-Verlagsunion, 1993, ISBN 3-8058-2357-6\nKarel Reisz, Gavin Millar, Geschichte und Technik der Filmmontage, München: Filmlandpresse, 1988, ISBN 3-88690-071-1\nChris Vogler, Die Reise des Drehbuchschreibens, Verlag Zweitausendeins\nWolfgang Lanzenberger, Michael Müller, Unternehmensfilme drehen: Business Movies im digitalen Zeitalter, ISBN 978-386764367\n\n Visuelle Effekte und Animation\nFlückiger Barbara, Visual Effects: Filmbilder aus dem Computer (Zürcher Filmstudien), Schüren Verlag GmbH, 2008, ISBN 978-3894725181\nBertram Sascha, VFX (Praxis Film), UVK, 2005, ISBN 978-3896695154\n\nCross-Platform Game Development mit Unity 3D\nUnity 3D API (https://docs.unity3d.com/ScriptReference/)\nUnity 3D Manual (https://docs.unity3d.com/Manual/index.html)\nUnity Tutorials (https://unity3d.com/de/learn/tutorials)\nIan Millington, John Funge,  Artificial Intelligence For Games, Second Edition, CRC Press, 2009\nMat Buckland,  Programming Game AI by Example, Wordware Game Developers Library, 2004\nSteve Rabin et al.,  AI Game Programming Wisdom 1-4, Cengage Learning\n\n Prozedurale Generierung virtueller Welten\nPeter Shirley, Steve Marschner, “Fundamentals of Computer Graphics“, CRC Press\nDavid Salomon, “Curves and Surfaces for Computer Graphics”, Springer\nCarsten Seifert, “Spiele entwickeln mit Unity 5”, Hanser\nNoor Shaker, Julian Togelius, Mark J. Nelson, \"Procedural Content Generation in Games (Computational Synthesis and Creative Systems)\",  Springer\nRyan Watkins, \"Procedural Content Generation for Unity Game Development\", Packt Publishing\nDale Green, \"Procedural Content Generation for C++ Game Development\", Packt Publishing\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_Vertiefung-Web_Development",
        "title": "Web Development",
        "content": "\nKurzbeschreibung\nEinführungen in Konzepte, Techniken und Arbeitsweisen der Web Entwicklung.\n\n Lehrform/SWS\n16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS\n\nLehrveranstaltungen\nWeb Frontend Entwicklung\nServerseitige Frameworks und Dienste\nInternet of Things\nWeb Development Projekt\n\n Arbeitsaufwand\n600h Gesamtaufwand\n\nWeb-Frontend Entwicklung\n50h Vorlesung, Seminar; 100h Selbstlernphase\n\n Serverseitige Frameworks und Dienste\n50h Vorlesung, Seminar; 100h Selbstlernphase\n\nInternet of Things\n50h Vorlesung, Seminar; 100h Selbstlernphase\n\n Web Development Projekt\n150h Projekt\n\nAngestrebte Lernergebnisse\nDie Studierenden\nkennen ausgewählte Methoden und Frameworks für die Web Entwicklung im Front-End, im Back-End und in vernetzten Geräten (IoT),\nkönnen eine Methoden und Technologiewahl für einen Projektkontext fachlich begründen,\nkönnen Frameworks und Methoden zur Realisierung von Proof-of-Concepts in einem Projektkontext einsetzen und\nkönnen die erzielten Ergebnisse fachlich, kritisch einordnen und diskutieren,\num kompetent in Web Entwicklungs Teams mitwirken zu können.\n\n Web Frontend Entwicklung\nDie Studierenden kennen wesentliche Konzepte und Technologien des Web-Frontend Developments und können diese anwenden, um eigenständig im Team Web-Frontends zu konzipieren, realisieren und optimieren.\n\nDie Studierenden sind in der Lage ein gegebenes Gestaltungskonzept zu verstehen und zu erweitern, um dies als Web-Frontend umzusetzen.\n\nDie Studierenden kennen Web-Frontend Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts das optimale Framework Set zu konfektionieren und die Auswahl zu begründen.\n\nDie Studierenden kennen das Zusammenspiel von server- und clientseitigen Komponenten im Bereich des Webs und können Web-Frontends konzipieren und realisieren, die mit serverseitigen Komponenten und Diensten möglichst optimal zusammen arbeiten. Sie können außerdem, bezogen auf eine konkrete Aufgabenstellung, abwägen, welche Funktionalitäten clientseitig und welche serverseitig gelöst werden sollten.\n\nServerseitige Frameworks und Dienste\n\nDie Studentinnen und Studenten kennen\nwesentliche Frameworks, Dienste und Werkzeuge für die serverseitige Entwicklung von Web Anwendungen\nkönnen ausgewählte Frameworks, Dienste und Tools in einem Projektkontext anwenden.\n\nDie Kompetenz zur systematischen Entwicklung von Systemen in einem arbeitsteiligen Team wird eingeübt und vertieft. Kenntnisse aus den anderen Modulen der Vertiefung werden vertieft und verknüpft und im Rahmen eines konkreten Projektauftrags angewendet.\n\nDie Studierenden sind in der Lage ein Projektbriefing zu durchdringen und daraus einen Projektauftrag abzuleiten und diesen im Team abzuarbeiten.\n\nDen Teilnehmern steht eine Auswahl an Techniken und Frameworks zur Verfügung, aus dem sie die passenden Ansätze begründet auswählen und anwenden können.\n\nDie StudentenInnen sind in der Lage eine komplexe Anwendung im Web über mehrere Endgeräte hinweg zu planen, zu realisieren und zu dokumentieren.\n\n Internet of Things\n\nIn diesem Modul lernen die Teilnehmer das Gebiet Internet of Things kennen. Dabei liegt ein besonderer Fokus auf der Bedeutung des Web für Applikationen jenseits eines Browsers. Immer mehr Alltagsgegenstände werden mit Technologien angereichert, die eine Dienste-Bereitstellung oder Dienst-Nutzung über das Web ermöglichen (beispielsweise das Steuern von Gegenständen oder das Erfassen von Sensordaten). In diesem Modul werden relevante Konzepte und aktuelle Technologien für das Internet der Dinge diskutiert und in prototypischen Anwendungen erprobt.\n\nStudierende können nach diesem Modul selbstständig Anwendungen für das Internet of Things konzipieren und realisieren, indem Sie\nhardware-nahe Aspekte im Design der Applikation berücksichtigen,\neine System-Architektur entwerfen,\nkriterien-basiert geeignete Technologien zur Realisierung auswählen,\neine prototypische Anwendung implementieren,\ninkrementell-iterativ vorgehen und Projektentscheidungen auf der Grundlage vorliegender Zwischenstände treffen.\n\nInhalt\n\n Web Frontend Entwicklung\nWeb Basics: HTML, CSS, Javascript\nCSS: Komplexe Layouts & Responsivität\nJavascript: Dynamische Anwendungen\nMedia Types\nCSS Frameworks\nCSS Preprozessoren\nJavascript Frameworks\nPerformance\nMicrodata, Internationalisierung, SEO, Barrierefreiheit\n\nServerseitige Frameworks und Dienste\n\nNodeJS\nServices im Web: Amazon WS (AWS), Google Firebase\nNoSQL Datenbanken\nWeb Analyse: Piwik,\n\nAusgewählte Tools sollen tiefgreifend erarbeitet werden und in einem Projektkontext angewendet werden. Dies erfolgt in der Regel in dem begleitenden Projekt\n\n Internet of Things\nPhysical Computing\nPrototyping und Retrofitting\nHardware (bspw. RaspberryPi und Arduino)\nSensoren und Aktoren\nFrameworks (bspw. NodeRed und Johnny Five)\nArchitekturen und Protokolle (bspw. event-basierte Architekturen und MQTT)\nMobile Web- und Smartphone-Sensoren (bspw. GPS, Beacons)\n\nStudien-/Prüfungsleistungen\nProjektarbeit mit Projektpräsentationsprüfung und Fachgespräch.\n\n Medienformen\nBeamergestützte Vorträge, Rechnergestützte Workshops\n\nLiteratur\nRandy Connolly, Ricardo Hoar: Fundamentals of Web Development\nAndy Clark: Hardboiled Web-Design\nTilkov et al.: REST und HTTP- Entwicklung und Integration nach dem Architekturstil des Web, dpunkt.verlag 2015\nWatkin: Practical XMPP, Packt Publishing 2016\nSaint-Andre: XMPP: THe Definitive Guide, OReilly 2009\nRoy: RabbitMQ in Depth, Manning 2016\nNewman: Building Microservices: Designing fine-grained systems, OReilly 2015\n",
        "tags": []
    },
    {
        "uri": "/content/study/bachelor/moduls/BA_WPF",
        "title": "Wahlpflichtmodul",
        "content": "\nArbeitsaufwand\n150 Stunden\n\n Angestrebte Lernergebnisse\nFachliche Vertiefung oder Verbreiterung, nach persönlichem Interesse. Es kann eines der Module aus dem Katalog aller Module der Informatik Bachelorstudiengänge gewählt werden. Auch Pflichtmodule anderer Informatik Studiengänge am Campus können als Wahlpflichtmodule in der Medieninformatik belegt werden.\n",
        "tags": []
    },
    {
        "uri": "/content/study/master/_index",
        "title": "Medieninformatik Master",
        "content": "\nDer Master Studiengang ist postgradual, d.h. zur Zulassung ist ein erfolgreich abgeschlossener grundständiger Studiengang erforderlich, z.B. der Medieninformatik Bachelor. Der Medieninformatik Master ist auf vier Fachsemester ausgelegt und schließt mit dem Master of Science ab. Klingt gut, oder?\n\nDer Masterstudiengang Medieninformatik ist inhaltlich durch seine Studienschwerpunkte Human Computer Interaction,  Multi-Perspective Product Development, Social Computing, Visual Computing und Weaving the Web charakterisiert. \n\n!--more--\n\n",
        "tags": []
    },
    {
        "uri": "/content/todos/projektseite",
        "title": "Projektseite",
        "content": "\nSourcemap integration\n\nCoding Styleguide\nWie werden CSS Eigenschaften gestackt?\n\n CSS Maps",
        "tags": []
    },
    {
        "uri": "/content/website/_index",
        "title": "Website",
        "content": "\nDie Medieninformatik Website ist der Schweizer Taschenmesser für die Kommunikation nach außen und innen. Sie richtet sich an alle Zielgruppen und stellt Informationen und Einblicke in das Forschungs- und Lehrgebiet Medieninformatik für die verschiedenen Zielgruppen bereit. Hier landet im Grunde alles, was in den anderen Kanälen nicht passt, oder was für längere Zeit vorgehalten werden soll. \n\n",
        "tags": []
    },
    {
        "uri": "/content/website/categories",
        "title": "Kategorien",
        "content": "\nInhalte der Website werden den folgenden Kategorien zugeordnet:\n\n/home\n\nDie Startseite bildet den Einflugschneise für alle. Dementsprechend sollten hier wesentliche Ausschnitte aus allen anderen Kategorien gezeigt werden, um einen Überblick zu geben. In einer späteren Ausbaustufe könnte hier auch eine zielgruppenspezifische Ansprache, z.B. in Form eine Natural-language interface integriert werden.\n\n /mission\n\n/people\n\n /projects\n\n/pulse\n\n /research\n\n/study\n\n /toolbox\n\n",
        "tags": []
    },
    {
        "uri": "/content/website/content-types",
        "title": "Inhaltstypen",
        "content": "\nFolgende Inhaltstypen werden unterschieden:\n\nAnnouncement\n\n Review\n\nBackground\n\n Paper\n\nTutorial\n\n Statement\n\n",
        "tags": []
    },
    {
        "uri": "/content/website/gestaltungsziele",
        "title": "Gestaltungsziele",
        "content": "\nMit der Gestaltung der Seite sollen folgende Wirkungen erzielt werden:\n\ndie MI ist Teil der Hochschule, aber wir befinden uns hier nicht auf der Hochschulwebsite, sondern auf eigenem Terrain\ndie MI ist technische orientiert\ndie MI hat eine ausgeprägte ästhetische Komponente\ndie MI ist eigenständig, prägnant und strukturiert\ndie MI bietet Platz\ndie MI ist freundlich, offen und zugewandt\nhier gibt es was zu entdecken\n\nDas Design ist möglichst einfach, klar, reduziert und großzügig. Sie kommt ohne Effekte und mit möglichst wenigen Hilfselementen wie Rahmen oder Schatten aus. Statt dessen wird mit einer prägnenten und selbstbewussten Typographie und viel Weißraum gearbeitet.\n\n",
        "tags": []
    },
    {
        "uri": "/content/website/structure",
        "title": "Struktur",
        "content": "\nStrukturell besteht die Site aus Artikeln, die jeweils einer Kategorie zugeordnet sind. Die Kategorien bestehen möglichst aus einem Wort und sind das erste Segment der URL. Über die jeweilige Kategorien-URL wird die Übersichtsseite der Kategorie aufgerufen, z.B.:\n\n medieninformatik.th-koeln.de/study\n\nEin weiteres Stukturierungselement bilden Tags. Einem Artikel können beliebig viele Tags zugeordnet werden. Jeder Tag bildet über eine eigene URL einen Einstiegspunkt in die Artikel zu diesem Tag, z.B.: \n\n medieninformatik.th-koeln.de/jobs\n\n",
        "tags": []
    }
]